{"ast":null,"code":"export default {\n  data() {\n    return {\n      editMode: false\n    };\n  },\n  methods: {\n    enableEditMode() {\n      this.editMode = true;\n      const form = this.$refs.myForm;\n      form.classList.add('edit-mode');\n\n      // Enable input fields for editing\n      form.querySelectorAll('input, select').forEach(input => {\n        input.removeAttribute('disabled');\n      });\n    },\n    // Save the changes and exit edit mode\n    saveChanges() {\n      this.editMode = false;\n      const form = this.$refs.myForm;\n      form.classList.remove('edit-mode');\n\n      // Disable input fields after saving changes\n      form.querySelectorAll('input, select').forEach(input => {\n        input.setAttribute('disabled', true);\n      });\n    },\n    // Cancel changes and exit edit mode\n    cancelChanges() {\n      this.editMode = false;\n      const form = this.$refs.myForm;\n      form.classList.remove('edit-mode');\n\n      // Reset the form to its original state\n      form.reset();\n    }\n  },\n  mounted() {\n    // 버튼 클릭 이벤트 핸들링\n    const editBtn = document.querySelector('.edit-btn');\n    const saveBtn = document.querySelector('.save-btn');\n    const cancelBtn = document.querySelector('.cancel-btn');\n    editBtn.addEventListener('click', this.enableEditMode);\n    saveBtn.addEventListener('click', this.saveChanges);\n    cancelBtn.addEventListener('click', this.cancelChanges);\n  }\n};","map":{"version":3,"names":["data","editMode","methods","enableEditMode","form","$refs","myForm","classList","add","querySelectorAll","forEach","input","removeAttribute","saveChanges","remove","setAttribute","cancelChanges","reset","mounted","editBtn","document","querySelector","saveBtn","cancelBtn","addEventListener"],"sources":["C:\\Users\\김혜빈\\Desktop\\Connect\\frontend\\project\\src\\views\\MatchingBoardPage.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 네비게이션 바 -->\n    <nav class=\"navbar bg-body-tertiary fixed-top\">\n        <div class=\"container-fluid\">\n            <div class=\"navbar_logo\">\n                <span class=\"MatchingUs\">MATCHING US</span>\n            </div>\n            <div class=\"navbar_right\">\n                <div class=\"navbar_welcome\">\n                    <div class=\"welcome\">환영합니다, <strong class=\"name\">김혜빈</strong>님! <i class=\"fa-regular fa-face-smile\"></i></div>\n                </div>\n                <form class=\"d-flex\" role=\"search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\"><a href=\"login.html\" style=\"color: #9370DB; text-decoration: none;\"><i class=\"fa-solid fa-right-from-bracket\"></i> LOG OUT!</a></button>\n                </form>\n            </div>\n        </div>\n    </nav>\n\n    <nav class=\"menuBar\">\n      <div class=\"side_nav\">\n        <ul class=\"basicMenu\">\n          <li>\n            <button @click=\"displayMyPosts\">내 정보</button>\n          </li>\n          <li>\n            <button @click=\"displayMatchingApply\">매칭 신청</button>\n          </li>\n          <li>\n            <button @click=\"displayMatchingStatus\">매칭 현황</button>\n          </li>\n        </ul>\n      </div>\n    </nav>\n\n    <div class=\"content-container\">\n      <div class=\"content\">\n        <!-- 내 정보 확인 및 수정 -->\n      <h2>내 정보 확인 및 수정</h2>\n      <form ref=\"myForm\">\n          <label for=\"studentID\">학번 (ID):</label>\n          <input type=\"text\" id=\"studentID\" required disabled>\n          <br>\n\n          <label for=\"name\">이름:</label>\n          <input type=\"text\" id=\"name\" required disabled>\n          <br>\n\n          <label>성별:</label>\n          <input type=\"radio\" id=\"male\" name=\"gender\" value=\"male\" disabled>\n          <label for=\"male\">남자</label>\n          <input type=\"radio\" id=\"female\" name=\"gender\" value=\"female\" disabled>\n          <label for=\"female\">여자</label>\n          <br>\n\n          <label for=\"residence\">거주지:</label>\n          <select id=\"residence\" disabled>\n            <option value=\"남구\">남구</option>\n            <option value=\"북구\">북구</option>\n            <option value=\"강서구\">강서구</option>\n            <!-- 다른 구들도 추가 -->\n          </select>\n          <br>\n\n          <label for=\"age\">나이:</label>\n          <select id=\"age\" disabled>\n            <option value=\"20\">20세</option>\n            <option value=\"21\">21세</option>\n            <!-- 다른 나이도 추가 -->\n            <option value=\"29\">29세</option>\n          </select>\n          <br>\n\n          <label for=\"department\">단과대 & 소속학과:</label>\n          <select id=\"department\" disabled>\n            <option value=\"공과대학 시스템경영공학부 산업경영공학전공\">공과대학 시스템경영공학부 산업경영공학전공</option>\n            <!-- 다른 단과대 & 소속학과도 추가 -->\n          </select>\n          <br>\n\n          <label for=\"email\">이메일:</label>\n          <input type=\"email\" id=\"email\" required pattern=\".+@pknu\\.ac\\.kr\" title=\"부경대학교 이메일로 입력해주세요 (예: example@pknu.ac.kr)\" disabled>\n          <br>\n\n          <!-- Only show the edit button when not in edit mode -->\n          <button v-if=\"!editMode\" type=\"button\" class=\"edit-btn\" @click=\"enableEditMode\">\n            수정\n          </button>\n\n          <!-- Show the save and cancel buttons when in edit mode -->\n          <div v-if=\"editMode\">\n            <button type=\"button\" class=\"save-btn\" @click=\"saveChanges\">\n              저장\n            </button>\n            <button type=\"button\" class=\"cancel-btn\" @click=\"cancelChanges\">\n              취소\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      editMode: false,\n    };\n  },\n  methods: {\n    enableEditMode() {\n      this.editMode = true;\n      const form = this.$refs.myForm;\n      form.classList.add('edit-mode');\n\n      // Enable input fields for editing\n      form.querySelectorAll('input, select').forEach((input) => {\n        input.removeAttribute('disabled');\n      });\n    },\n\n    // Save the changes and exit edit mode\n    saveChanges() {\n      this.editMode = false;\n      const form = this.$refs.myForm;\n      form.classList.remove('edit-mode');\n\n      // Disable input fields after saving changes\n      form.querySelectorAll('input, select').forEach((input) => {\n        input.setAttribute('disabled', true);\n      });\n    },\n\n    // Cancel changes and exit edit mode\n    cancelChanges() {\n      this.editMode = false;\n      const form = this.$refs.myForm;\n      form.classList.remove('edit-mode');\n\n      // Reset the form to its original state\n      form.reset();\n    },\n  },\n  mounted() {\n    // 버튼 클릭 이벤트 핸들링\n    const editBtn = document.querySelector('.edit-btn');\n    const saveBtn = document.querySelector('.save-btn');\n    const cancelBtn = document.querySelector('.cancel-btn');\n\n    editBtn.addEventListener('click', this.enableEditMode);\n    saveBtn.addEventListener('click', this.saveChanges);\n    cancelBtn.addEventListener('click', this.cancelChanges);\n  },\n};\n</script>\n\n\n<style scoped>\nbody {\n    margin: 0;\n    background-color: white;\n}\n\n.MatchingUs {\n    font-size: 28px;\n    color: #9370DB;\n}\n\n.navbar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #F6E6F6;\n    padding: 8px 12px;\n}\n\n.navbar_logo {\n    font-size: 24px;\n}\n\n.navbar_logo .logo_image {\n    margin-right: 8px; \n}\n\n.navbar_welcome {\n    display: flex;\n    align-items: center;\n    margin-right: 30px; \n    margin-top: 10px;\n    font-weight: 400;\n}\n\n.navbar_welcome .welcome {\n    color: #9370DB;\n    margin-bottom: 10px;\n}\n\n.btn.btn-outline-success {\n    /* color: #9370DB; */\n    border-color: #9370DB; \n    font-weight: 500;\n}\n\n.navbar_right {\n    display: flex;\n    align-items: center;\n}\n\n.navbar_right .btn {\n    margin-left: auto;\n    background-color: #F6E6F6; /* Set the background color to match the navbar background color */\n/* Set the border color to match the text color */\n}\n\n.navbar_right .btn a {\n/* Set the text color of the button */\n    text-decoration: none;\n}\n\n.navbar_right .btn:hover {\n    transform: scale(1.05);\n}\n\n\n\n/* 사이드 메뉴 바 */\n.side_nav {\n    width: 200px;\n    height: 100%;\n    position: fixed;\n    background-color:#E0E0E0; /* 회색으로 변경 */\n    padding: 20px;\n}\n\n.basicMenu {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n}\n\n.basicMenu button {\n    background: none;\n    border: none;\n    cursor: pointer;\n    padding: 10px;\n    margin-bottom: 10px;\n    width: 100%;\n    text-align: left;\n    color: white; /* 버튼 텍스트 색상 흰색으로 설정 */\n    font-size: 16px;\n    transition: background-color 0.3s; /* 호버 효과 추가 */\n}\n\n.basicMenu button:hover {\n    background-color:#cccccc; /* 호버시 진한 회색으로 변경 */\n}\n\n.menuBar {\n  top: 60px; /* Adjust this value according to your fixed navbar height */\n}\n\n.container {\n  display: flex;\n  justify-content: center;\n}\n\n\n.board-list {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    margin-top: 100px;\n}\n\n.board-list li {\n    background-color: white;\n    border-radius: 10px;\n    padding: 15px;\n    margin-bottom: 15px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n    height: 400px;\n    width: 400px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    flex: 0 0 calc(50% - 20px);\n}\n\n.board-list .btn {\n    margin-top: auto;\n    background-color: #F6E6F6;\n    color: #9370DB; /* 버튼 텍스트 색상 흰색으로 설정 */\n    border-color: #F6E6F6;\n    width: 100%;\n}\n\n.board-list .btn:hover {\n    transform: scale(1.05); \n}\n\n.content-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh; /* Set the height of the container to occupy the full viewport height */\n}\n\n/* Optionally, you can adjust the width of the form to your preference */\nform {\n  max-width: 500px;\n  width: 100%;\n}\n\n@import \"~bootstrap/dist/css/bootstrap.min.css\";\n@import \"~@fortawesome/fontawesome-free/css/all.min.css\";\n</style>"],"mappings":"AAyGA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAAA,EAAG;MACf,IAAI,CAACF,QAAO,GAAI,IAAI;MACpB,MAAMG,IAAG,GAAI,IAAI,CAACC,KAAK,CAACC,MAAM;MAC9BF,IAAI,CAACG,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;;MAE/B;MACAJ,IAAI,CAACK,gBAAgB,CAAC,eAAe,CAAC,CAACC,OAAO,CAAEC,KAAK,IAAK;QACxDA,KAAK,CAACC,eAAe,CAAC,UAAU,CAAC;MACnC,CAAC,CAAC;IACJ,CAAC;IAED;IACAC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACZ,QAAO,GAAI,KAAK;MACrB,MAAMG,IAAG,GAAI,IAAI,CAACC,KAAK,CAACC,MAAM;MAC9BF,IAAI,CAACG,SAAS,CAACO,MAAM,CAAC,WAAW,CAAC;;MAElC;MACAV,IAAI,CAACK,gBAAgB,CAAC,eAAe,CAAC,CAACC,OAAO,CAAEC,KAAK,IAAK;QACxDA,KAAK,CAACI,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC;MACtC,CAAC,CAAC;IACJ,CAAC;IAED;IACAC,aAAaA,CAAA,EAAG;MACd,IAAI,CAACf,QAAO,GAAI,KAAK;MACrB,MAAMG,IAAG,GAAI,IAAI,CAACC,KAAK,CAACC,MAAM;MAC9BF,IAAI,CAACG,SAAS,CAACO,MAAM,CAAC,WAAW,CAAC;;MAElC;MACAV,IAAI,CAACa,KAAK,CAAC,CAAC;IACd;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,MAAMC,OAAM,GAAIC,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC;IACnD,MAAMC,OAAM,GAAIF,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC;IACnD,MAAME,SAAQ,GAAIH,QAAQ,CAACC,aAAa,CAAC,aAAa,CAAC;IAEvDF,OAAO,CAACK,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACrB,cAAc,CAAC;IACtDmB,OAAO,CAACE,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACX,WAAW,CAAC;IACnDU,SAAS,CAACC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACR,aAAa,CAAC;EACzD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}