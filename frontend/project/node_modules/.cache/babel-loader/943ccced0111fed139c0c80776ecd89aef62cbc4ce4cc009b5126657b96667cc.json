{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  name: 'LoginForm',\n  // Multi-word name\n  data() {\n    return {\n      userId: '',\n      password: ''\n    };\n  },\n  methods: {\n    goToMainPage() {\n      this.$router.push(\"/MainPage\");\n    },\n    goToSignUpPage() {\n      this.$router.push(\"/SignUpPage\");\n    },\n    checkInputs() {\n      if (!this.userId || !this.password) {\n        alert('아이디와 비밀번호를 모두 입력해주세요.');\n      } else {\n        // 서버로 아이디와 비밀번호를 보내는 로직을 추가해야 합니다.\n        // 서버에서 검증 후 로그인 처리를 해야 합니다.\n      }\n    },\n    async loginUser() {\n      if (!this.userId || !this.password) {\n        alert('아이디와 비밀번호를 모두 입력해주세요.');\n        return;\n      }\n      try {\n        const response = await axios.post(\"http://localhost:3001/api/login\", {\n          studentID: this.userId,\n          password: this.password\n        });\n        if (response.status === 200) {\n          const {\n            message,\n            user,\n            token\n          } = response.data;\n          alert(message); // 백엔드에서 온 성공 메시지를 보여줍니다.\n\n          // 로그인에 성공하면 사용자 정보와 토큰을 로컬 스토리지에 저장합니다.\n          localStorage.setItem('user', JSON.stringify(user));\n          localStorage.setItem('token', token);\n\n          // 로그인에 성공하면 Main 페이지로 이동합니다.\n          this.$router.push({\n            path: '/MainPage'\n          });\n        } else {\n          // 로그인이 실패한 경우, 백엔드에서 온 에러 메시지를 보여줍니다.\n          const {\n            error\n          } = response.data;\n          alert(error);\n        }\n      } catch (error) {\n        console.error(\"로그인 중에 문제가 발생했습니다. 다시 시도해주세요.\", error);\n        alert(\"로그인 중에 문제가 발생했습니다. 다시 시도해주세요.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","userId","password","methods","goToMainPage","$router","push","goToSignUpPage","checkInputs","alert","loginUser","response","post","studentID","status","message","user","token","localStorage","setItem","JSON","stringify","path","error","console"],"sources":["C:\\Project-Matching-Us\\frontend\\project\\src\\views\\LoginPage.vue"],"sourcesContent":["<template>\r\n\r\n<div class=\"LoginPageContainer\">\r\n    <form class=\"LoginPage\" @submit.prevent=\"loginUser\">\r\n    <div class=\"logo-container\">\r\n      <img src=\"/image/logo.png\" class=\"logo\" alt=\"매칭어스 로고\" />\r\n    </div>\r\n    <div class=\"int-area\">\r\n      <label for=\"id\"></label>\r\n      <input v-model=\"userId\" type=\"text\" name=\"id\" id=\"id\" placeholder=\"USER ID\" />\r\n      <label for=\"password\"></label>\r\n      <input v-model=\"password\" type=\"password\" name=\"pwd\" id=\"pwd\" placeholder=\"PASSWORD\" required />\r\n    </div>\r\n\r\n    <div class=\"btn-area\">\r\n        <button @click=\"loginUser\" type=\"submit\" id=\"login-button\" :disabled=\"!userId || !password\">\r\n          LOGIN\r\n        </button>\r\n      </div>\r\n\r\n    <div class=\"caption\">\r\n      <a href=\"#\" @click=\"goToSignUpPage\">회원가입</a>\r\n    </div>\r\n  </form>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: 'LoginForm', // Multi-word name\r\n  data() {\r\n    return {\r\n      userId: '',\r\n      password: '',\r\n    };\r\n  },\r\n  methods: {\r\n    goToMainPage() {\r\n      this.$router.push(\"/MainPage\");\r\n    },\r\n    goToSignUpPage() {\r\n      this.$router.push(\"/SignUpPage\");\r\n    },\r\n    checkInputs() {\r\n      if (!this.userId || !this.password) {\r\n        alert('아이디와 비밀번호를 모두 입력해주세요.');\r\n      } else {\r\n        // 서버로 아이디와 비밀번호를 보내는 로직을 추가해야 합니다.\r\n        // 서버에서 검증 후 로그인 처리를 해야 합니다.\r\n      }\r\n    },\r\n    async loginUser() {\r\n      if (!this.userId || !this.password) {\r\n        alert('아이디와 비밀번호를 모두 입력해주세요.');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.post(\"http://localhost:3001/api/login\", {\r\n          studentID: this.userId,\r\n          password: this.password,\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          const { message, user, token } = response.data;\r\n          alert(message); // 백엔드에서 온 성공 메시지를 보여줍니다.\r\n          \r\n          // 로그인에 성공하면 사용자 정보와 토큰을 로컬 스토리지에 저장합니다.\r\n          localStorage.setItem('user', JSON.stringify(user));\r\n          localStorage.setItem('token', token);\r\n\r\n          // 로그인에 성공하면 Main 페이지로 이동합니다.\r\n          this.$router.push({\r\n            path: '/MainPage',\r\n          });\r\n        } else {\r\n          // 로그인이 실패한 경우, 백엔드에서 온 에러 메시지를 보여줍니다.\r\n          const { error } = response.data;\r\n          alert(error);\r\n        }\r\n      }  catch (error) {\r\n        console.error(\"로그인 중에 문제가 발생했습니다. 다시 시도해주세요.\", error);\r\n        alert(\"로그인 중에 문제가 발생했습니다. 다시 시도해주세요.\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nbody, html {\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: 'HakgyoansimWoojuR', sans-serif;\r\n}\r\n\r\n.LoginPageContainer {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  background: linear-gradient(to bottom right, white, #F6E6F6);\r\n  overflow: hidden; /* Prevent scrolling */\r\n}\r\n\r\n.LoginPage {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed; /* Change to fixed */\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 400px;\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  border-radius: 50px;\r\n}\r\n\r\n.logo-container {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  width: 100%; /* Add this line */\r\n}\r\n\r\n.logo {\r\n  max-width: 70%;\r\n  height: auto;\r\n  display: inline-block; /* Add this line */\r\n}\r\n\r\n.LoginPage h1 {\r\n  font-size: 32px;\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.int-area input {\r\n  width: 100%;\r\n  padding: 15px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n\r\n.btn-area button {\r\n  width: 100%; /* Allow the button to expand to the parent width */\r\n  max-width: 300px; /* Set a maximum width for the button */\r\n  margin: 0 auto; /* Center the button horizontally */\r\n  padding: 15px; /* Adjust padding for spacing */\r\n  background: #007bff;\r\n  color: white;\r\n  font-size: 16px;\r\n  border: none;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease-in-out;\r\n}\r\n\r\n.btn-area button:disabled {\r\n  background: #ccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.caption {\r\n  margin-top: 15px;\r\n  text-align: center;\r\n}\r\n\r\n.caption a {\r\n  font-size: 16px;\r\n  color: #007bff;\r\n  text-decoration: none;\r\n  font-weight: bold;\r\n}\r\n\r\n@font-face {\r\n    font-family: 'HakgyoansimWoojuR';\r\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2307-2@1.0/HakgyoansimWoojuR.woff2') format('woff2');\r\n    font-weight: normal;\r\n    font-style: normal;\r\n}\r\n\r\n</style>"],"mappings":";AA4BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EAAE;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;IAChC,CAAC;IACDC,cAAcA,CAAA,EAAG;MACf,IAAI,CAACF,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;IAClC,CAAC;IACDE,WAAWA,CAAA,EAAG;MACZ,IAAI,CAAC,IAAI,CAACP,MAAK,IAAK,CAAC,IAAI,CAACC,QAAQ,EAAE;QAClCO,KAAK,CAAC,uBAAuB,CAAC;MAChC,OAAO;QACL;QACA;MAAA;IAEJ,CAAC;IACD,MAAMC,SAASA,CAAA,EAAG;MAChB,IAAI,CAAC,IAAI,CAACT,MAAK,IAAK,CAAC,IAAI,CAACC,QAAQ,EAAE;QAClCO,KAAK,CAAC,uBAAuB,CAAC;QAC9B;MACF;MAEA,IAAI;QACF,MAAME,QAAO,GAAI,MAAMb,KAAK,CAACc,IAAI,CAAC,iCAAiC,EAAE;UACnEC,SAAS,EAAE,IAAI,CAACZ,MAAM;UACtBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QAEF,IAAIS,QAAQ,CAACG,MAAK,KAAM,GAAG,EAAE;UAC3B,MAAM;YAAEC,OAAO;YAAEC,IAAI;YAAEC;UAAM,IAAIN,QAAQ,CAACX,IAAI;UAC9CS,KAAK,CAACM,OAAO,CAAC,EAAE;;UAEhB;UACAG,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAAC;UAClDE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;;UAEpC;UACA,IAAI,CAACZ,OAAO,CAACC,IAAI,CAAC;YAChBgB,IAAI,EAAE;UACR,CAAC,CAAC;QACJ,OAAO;UACL;UACA,MAAM;YAAEC;UAAM,IAAIZ,QAAQ,CAACX,IAAI;UAC/BS,KAAK,CAACc,KAAK,CAAC;QACd;MACF,EAAG,OAAOA,KAAK,EAAE;QACfC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrDd,KAAK,CAAC,+BAA+B,CAAC;MACxC;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}