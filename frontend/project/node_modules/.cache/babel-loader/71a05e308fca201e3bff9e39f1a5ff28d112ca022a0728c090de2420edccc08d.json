{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-485424ce\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"logo\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: \"/image/logo.png\",\n  class: \"img\",\n  alt: \"매칭어스 로고\"\n})], -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"int-area\"\n};\nconst _hoisted_3 = {\n  class: \"btn-area\"\n};\nconst _hoisted_4 = [\"disabled\"];\nconst _hoisted_5 = {\n  class: \"caption\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"계정이 없으신가요?\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"form\", {\n    class: \"LoginPage\",\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.loginUser && $options.loginUser(...args), [\"prevent\"]))\n  }, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.userId = $event),\n    type: \"text\",\n    name: \"id\",\n    id: \"id\",\n    placeholder: \"USER ID\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.userId]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    type: \"password\",\n    name: \"pwd\",\n    id: \"pwd\",\n    placeholder: \"PASSWORD\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.loginUser && $options.loginUser(...args)),\n    type: \"submit\",\n    id: \"login-button\",\n    disabled: !$data.userId || !$data.password\n  }, \" LOGIN \", 8 /* PROPS */, _hoisted_4)]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createVNode(_component_router_link, {\n    to: \"/SignUpPage\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"회원가입\")]),\n    _: 1 /* STABLE */\n  })])], 32 /* HYDRATE_EVENTS */);\n}","map":{"version":3,"names":["_createElementVNode","class","src","alt","_createElementBlock","onSubmit","_cache","_withModifiers","args","$options","loginUser","_hoisted_1","_hoisted_2","$data","userId","$event","type","name","id","placeholder","password","required","_hoisted_3","onClick","disabled","_hoisted_4","_hoisted_5","_hoisted_6","_createVNode","_component_router_link","to"],"sources":["C:\\Users\\김혜빈\\Desktop\\Connect\\frontend\\project\\src\\views\\LoginPage.vue"],"sourcesContent":["<template>\n  <form class=\"LoginPage\" @submit.prevent=\"loginUser\">\n    <div class=\"logo\">\n      <img src=\"/image/logo.png\" class=\"img\" alt=\"매칭어스 로고\" />\n    </div>\n    <div class=\"int-area\">\n      <input v-model=\"userId\" type=\"text\" name=\"id\" id=\"id\" placeholder=\"USER ID\" />\n      <input v-model=\"password\" type=\"password\" name=\"pwd\" id=\"pwd\" placeholder=\"PASSWORD\" required />\n    </div>\n    <div class=\"btn-area\">\n      <button @click=\"loginUser\" type=\"submit\" id=\"login-button\" :disabled=\"!userId || !password\">\n        LOGIN\n      </button>\n    </div>\n    <div class=\"caption\">\n      <p>계정이 없으신가요?</p>\n      <router-link to=\"/SignUpPage\">회원가입</router-link>\n    </div>\n  </form>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: 'LoginForm',\n  data() {\n    return {\n      userId: '',\n      password: '',\n    };\n  },\n  methods: {\n    goToMainPage() {\n      this.$router.push(\"/MainPage\");\n    },\n    goToSignUpPage() {\n      this.$router.push(\"/SignUpPage\");\n    },\n    checkInputs() {\n      if (!this.userId || !this.password) {\n        alert('Please enter both user ID and password.');\n      } else {\n        // Additional logic to send user ID and password to the server\n        // Server validation and login processing should be added here.\n      }\n    },\n    async loginUser() {\n      if (!this.userId || !this.password) {\n        alert('Please enter both user ID and password.');\n        return;\n      }\n\n      try {\n        const response = await axios.post(\"http://localhost:3001/api/login\", {\n          studentID: this.userId,\n          password: this.password,\n        });\n\n        if (response.status === 200) {\n          const { message, user, token } = response.data;\n          alert(message);\n\n          localStorage.setItem('user', JSON.stringify(user));\n          localStorage.setItem('token', token);\n\n          this.$router.push(\"/MainPage\");\n        } else {\n          const { error } = response.data;\n          alert(error);\n        }\n      }  catch (error) {\n        console.error(\"An error occurred during login. Please try again.\", error);\n        alert(\"An error occurred during login. Please try again.\");\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\nbody {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #f0f0f0;\n  margin: 0;\n  font-family: Arial, sans-serif;\n}\n\n.LoginPage {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  padding: 20px;\n}\n\n.logo {\n  margin-bottom: 20px;\n}\n\n.int-area {\n  width: 100%;\n}\n\n.int-area input {\n  width: 100%;\n  padding: 15px;\n  border: none;\n  border-bottom: 1px solid #ccc;\n  font-size: 16px;\n  margin-bottom: 15px;\n}\n\n.btn-area {\n  width: 100%;\n}\n\n.btn-area button {\n  width: 100%;\n  padding: 12px;\n  background-color: #9370DB;\n  color: white;\n  font-size: 18px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.caption {\n  margin-top: 15px;\n  text-align: center;\n}\n\n.caption p {\n  margin-bottom: 10px;\n  color: #777;\n}\n\n.caption a {\n  color: #9370DB;\n  text-decoration: none;\n  font-weight: bold;\n}\n\n.img {\n  width: 300px;\n}\n</style>\n"],"mappings":";;gEAEIA,mBAAA,CAEM;EAFDC,KAAK,EAAC;AAAM,I,aACfD,mBAAA,CAAuD;EAAlDE,GAAG,EAAC,iBAAiB;EAACD,KAAK,EAAC,KAAK;EAACE,GAAG,EAAC;;;EAExCF,KAAK,EAAC;AAAU;;EAIhBA,KAAK,EAAC;AAAU;;;EAKhBA,KAAK,EAAC;AAAS;gEAClBD,mBAAA,CAAiB,WAAd,YAAU;;;;uBAdjBI,mBAAA,CAiBO;IAjBDH,KAAK,EAAC,WAAW;IAAEI,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;MAChDG,UAEM,EACNX,mBAAA,CAGM,OAHNY,UAGM,G,gBAFJZ,mBAAA,CAA8E;+DAA9Da,KAAA,CAAAC,MAAM,GAAAC,MAAA;IAAEC,IAAI,EAAC,MAAM;IAACC,IAAI,EAAC,IAAI;IAACC,EAAE,EAAC,IAAI;IAACC,WAAW,EAAC;iDAAlDN,KAAA,CAAAC,MAAM,E,mBACtBd,mBAAA,CAAgG;+DAAhFa,KAAA,CAAAO,QAAQ,GAAAL,MAAA;IAAEC,IAAI,EAAC,UAAU;IAACC,IAAI,EAAC,KAAK;IAACC,EAAE,EAAC,KAAK;IAACC,WAAW,EAAC,UAAU;IAACE,QAAQ,EAAR;iDAArER,KAAA,CAAAO,QAAQ,E,KAE1BpB,mBAAA,CAIM,OAJNsB,UAIM,GAHJtB,mBAAA,CAES;IAFAuB,OAAK,EAAAjB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;IAAEQ,IAAI,EAAC,QAAQ;IAACE,EAAE,EAAC,cAAc;IAAEM,QAAQ,GAAGX,KAAA,CAAAC,MAAM,KAAKD,KAAA,CAAAO;KAAU,SAE5F,iBAAAK,UAAA,E,GAEFzB,mBAAA,CAGM,OAHN0B,UAGM,GAFJC,UAAiB,EACjBC,YAAA,CAAgDC,sBAAA;IAAnCC,EAAE,EAAC;EAAa;sBAAC,MAAI,C,iBAAJ,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}