{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      editMode: true,\n      matchingType: '',\n      matchingTitle: '',\n      matchingContent: '',\n      resultMessage: '',\n      // To display the result message\n      resultMessageColor: ''\n    };\n  },\n  methods: {\n    async applyMatching() {\n      // 모든 필드가 채워져 있는지 확인\n      if (this.matchingType !== '' && this.matchingTitle.trim() !== '' && this.matchingContent.trim() !== '') {\n        const user = JSON.parse(localStorage.getItem('user'));\n        const userID = user ? user.id : null;\n        const postData = {\n          matchingType: this.matchingType,\n          matchingTitle: this.matchingTitle,\n          matchingContent: this.matchingContent,\n          userID: userID // You might also need to send the userID\n        };\n\n        // Send the post data to the server\n        try {\n          const response = await fetch(\"http://localhost:3001/api/addPost\", {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(postData)\n          });\n          if (response.ok) {\n            const data = await response.json();\n            alert(data.message);\n            this.resultMessage = '신청되었습니다!';\n            this.resultMessageColor = 'green';\n            this.$refs.myForm.reset();\n          } else {\n            const errorData = await response.json();\n            alert(errorData.error);\n            this.resultMessage = '매칭 신청에 실패했습니다.';\n            this.resultMessageColor = 'red';\n          }\n        } catch (error) {\n          console.error(\"오류\", error);\n        }\n      }\n    },\n    cancelMatching() {\n      // 폼 필드를 지우고 결과 메시지 초기화\n      this.matchingType = '';\n      this.matchingTitle = '';\n      this.matchingContent = '';\n      this.resultMessage = '';\n      this.resultMessageColor = ''; // 색상 재설정\n    },\n\n    // 내 정보 페이지로 이동\n    goToMyInfoPage() {\n      this.$router.push(\"/MyInfoPage\");\n    },\n    // 매칭 신청 페이지로 이동\n    goToMatchingApplyPage() {\n      this.$router.push(\"/MatchingApplyPage\");\n    },\n    // 매칭 현황 페이지로 이동\n    goToMatchingApplyDetailPage() {\n      this.$router.push(\"/MatchingApplyDetailPage\");\n    },\n    // 로그인 페이지로 이동\n    goToLoginPage() {\n      this.$router.push(\"/\");\n    },\n    goToMainPage() {\n      this.$router.push(\"/MainPage\");\n    },\n    goToNoticePage() {\n      this.$router.push(\"/NoticePage\");\n    }\n  }\n};","map":{"version":3,"names":["data","editMode","matchingType","matchingTitle","matchingContent","resultMessage","resultMessageColor","methods","applyMatching","trim","user","JSON","parse","localStorage","getItem","userID","id","postData","response","fetch","method","headers","body","stringify","ok","json","alert","message","$refs","myForm","reset","errorData","error","console","cancelMatching","goToMyInfoPage","$router","push","goToMatchingApplyPage","goToMatchingApplyDetailPage","goToLoginPage","goToMainPage","goToNoticePage"],"sources":["C:\\Users\\smlab\\workspace\\bootcamp\\final\\Project-Matching-Us\\frontend\\project\\src\\views\\MatchingApplyPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 네비게이션 바 -->\r\n    <!-- 상단 고정 네비게이션 바 -->\r\n    <nav class=\"navbar bg-body-tertiary fixed-top\">\r\n      <div class=\"container-fluid\">\r\n        <div class=\"navbar_logo\">\r\n          <!-- 매칭어스 로고 이미지 -->\r\n          <span class=\"MatchingUs\">\r\n            <img @click=\"goToMainPage\"\r\n              src=\"/image/logo.png\"\r\n              class=\"img\"\r\n              alt=\"매칭어스 로고\"\r\n            />\r\n          </span>\r\n        </div>\r\n        <div class=\"navbar_right\">\r\n          <div class=\"navbar_welcome\">\r\n            <!-- 사용자 이름과 환영 메시지 -->\r\n            <div class=\"welcome\">환영합니다, <strong class=\"name\">김혜빈</strong>님! <i class=\"fa-regular fa-face-smile\"></i></div>\r\n          </div>\r\n          <!-- 로그아웃 버튼 -->\r\n          <button @click=\"goToLoginPage\" class=\"btn btn-outline-success\" style=\"color: #9370DB; text-decoration: none;\">\r\n            <i class=\"fa-solid fa-right-from-bracket\"></i> LOG OUT!\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n\r\n    <!-- 사이드 메뉴 바 -->\r\n    <!-- 좌측 고정 사이드 메뉴 바 -->\r\n    <nav class=\"menuBar fixed-top\">\r\n      <div class=\"side_nav\">\r\n        <ul class=\"basicMenu\">\r\n          <li>\r\n            <!-- 내 정보 페이지로 이동 버튼 -->\r\n            <button @click=\"goToMyInfoPage\"><p style=\"text-decoration: none; color: white;\">내 정보</p></button>\r\n          </li>\r\n          <li>\r\n            <!-- 매칭 신청 페이지로 이동 버튼 -->\r\n            <button @click=\"goToMatchingApplyPage\"><p style=\"text-decoration: none; color: white;\">매칭 신청</p></button>\r\n          </li>\r\n          <li>\r\n            <!-- 매칭 현황 페이지로 이동 버튼 -->\r\n            <button @click=\"goToMatchingApplyDetailPage\"><p style=\"text-decoration: none; color: white;\">매칭 현황</p></button>\r\n          </li>\r\n          <li>\r\n            <!-- 공지사항 페이지로 이동 -->\r\n            <button @click=\"goToNoticePage\"><p style=\"text-decoration: none; color: white;\">공지사항</p></button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n\r\n    <!-- 매칭 현황 -->\r\n    <div class=\"match-status\">\r\n      <!-- 매칭 현황의 내용이 동적으로 표시될 영역 -->\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div class=\"content-container\">\r\n      <div class=\"content matching-form\">\r\n        <form ref=\"myForm\">\r\n          <div class=\"form-group\">\r\n            <div class=\"radio-container\">\r\n              <!-- 문제점 1: 1-2인 매칭, 3인 이상 텍스트 스타일 변경 -->\r\n              <label class=\"radio-label\">\r\n                <input type=\"radio\" id=\"matching-type-1\" name=\"matchingType\" value=\"1-2인 매칭\" v-model=\"matchingType\">\r\n                <span class=\"bold-purple\">1-2인 매칭</span>\r\n              </label>\r\n              <label class=\"radio-label\">\r\n                <input type=\"radio\" id=\"matching-type-2\" name=\"matchingType\" value=\"3인 이상 매칭\" v-model=\"matchingType\">\r\n                <span class=\"bold-purple\">3인 이상 매칭</span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <!-- 문제점 2: 매칭 제목 아래에 textbox 추가 및 위치 조정 -->\r\n            <label for=\"matchingTitle\" class=\"bold-purple\">매칭 제목</label>\r\n            <input type=\"text\" id=\"matchingTitle\" v-model=\"matchingTitle\" required :disabled=\"!editMode\">\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <!-- 문제점 2: 매칭 내용 아래에 textbox 추가 및 위치 조정 -->\r\n            <label for=\"matchingContent\" class=\"matching-label\">매칭 내용</label>\r\n            <textarea id=\"matchingContent\" rows=\"8\" v-model=\"matchingContent\" required :disabled=\"!editMode\"></textarea>\r\n          </div>\r\n\r\n          <div class=\"btn-container\">\r\n            <button type=\"button\" class=\"apply-btn\" @click=\"applyMatching\">\r\n              신청!\r\n            </button>\r\n            <button type=\"button\" class=\"cancel-btn\" @click=\"cancelMatching\">\r\n              취소\r\n            </button>\r\n          </div>\r\n\r\n          <p class=\"result-message\" :style=\"{ color: resultMessageColor }\">{{ resultMessage }}</p>\r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      editMode: true,\r\n      matchingType: '',\r\n      matchingTitle: '',\r\n      matchingContent: '',\r\n      resultMessage: '', // To display the result message\r\n      resultMessageColor: '', \r\n    };\r\n  \r\n},\r\n  methods: {\r\n    async applyMatching() {\r\n      // 모든 필드가 채워져 있는지 확인\r\n      if (\r\n          this.matchingType !== '' &&\r\n          this.matchingTitle.trim() !== '' &&\r\n          this.matchingContent.trim() !== ''\r\n      ) {\r\n          \r\nconst user = JSON.parse(localStorage.getItem('user'));\r\nconst userID = user ? user.id : null;\r\n\r\nconst postData = {\r\n              matchingType: this.matchingType,\r\n              matchingTitle: this.matchingTitle,\r\n              matchingContent: this.matchingContent,\r\n              userID: userID  // You might also need to send the userID\r\n          };\r\n\r\n          // Send the post data to the server\r\n          try {\r\n            const response = await fetch(\"http://localhost:3001/api/addPost\", {\r\n              method: 'POST',\r\n              headers: { \r\n                  'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(postData)\r\n          });\r\n          \r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            alert(data.message);\r\n            this.resultMessage = '신청되었습니다!';\r\n            this.resultMessageColor = 'green';\r\n            this.$refs.myForm.reset();\r\n            } else {\r\n              const errorData = await response.json();\r\n              alert(errorData.error);\r\n              this.resultMessage = '매칭 신청에 실패했습니다.';\r\n              this.resultMessageColor = 'red';\r\n              }\r\n          } catch (error){\r\n            console.error(\"오류\", error);\r\n          }\r\n      }\r\n    },\r\n\r\n    cancelMatching() {\r\n      // 폼 필드를 지우고 결과 메시지 초기화\r\n      this.matchingType = '';\r\n      this.matchingTitle = '';\r\n      this.matchingContent = '';\r\n      this.resultMessage = '';\r\n      this.resultMessageColor = ''; // 색상 재설정\r\n    },\r\n\r\n    // 내 정보 페이지로 이동\r\n    goToMyInfoPage() {\r\n      this.$router.push(\"/MyInfoPage\");\r\n    },\r\n\r\n    // 매칭 신청 페이지로 이동\r\n    goToMatchingApplyPage() {\r\n      this.$router.push(\"/MatchingApplyPage\");\r\n    },\r\n\r\n    // 매칭 현황 페이지로 이동\r\n    goToMatchingApplyDetailPage() {\r\n      this.$router.push(\"/MatchingApplyDetailPage\");\r\n    },\r\n\r\n    // 로그인 페이지로 이동\r\n    goToLoginPage() {\r\n      this.$router.push(\"/\");\r\n    },\r\n\r\n    goToMainPage() {\r\n      this.$router.push(\"/MainPage\");\r\n    },\r\n\r\n    goToNoticePage() {\r\n      this.$router.push(\"/NoticePage\");\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\nbody {\r\n    margin: 0;\r\n    background-color: white;\r\n    font-family: 'jua', sans-serif;\r\n}\r\n\r\n#matchingContent {\r\n  font-family: 'jua', sans-serif;\r\n}\r\n.MatchingUs {\r\n    font-size: 28px;\r\n    color: #9370DB;\r\n    font-family: 'jua', sans-serif;\r\n}\r\n\r\n/* 이미지의 크기를 조절하는 .img 클래스에 스타일 추가 */\r\n.img {\r\n    width: 200px; /* 이미지의 너비를 200px로 조정 */\r\n    height: auto; /* 높이를 자동으로 조정하여 가로 세로 비율 유지 */\r\n    margin-left: -20px; /* 이미지를 왼쪽으로 20px 이동 */\r\n}\r\n\r\n\r\n.navbar {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    background-color: #F6E6F6;\r\n    padding: 8px 12px;\r\n    font-family: 'jua', sans-serif;\r\n}\r\n\r\n.navbar_logo {\r\n    font-size: 24px;\r\n    font-family: 'jua', sans-serif;\r\n}\r\n\r\n.navbar_logo .logo_image {\r\n    margin-right: 8px; \r\n}\r\n\r\n.navbar_welcome {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 30px; \r\n    margin-top: 10px;\r\n    font-weight: 400;\r\n    font-family: 'jua', sans-serif;\r\n}\r\n\r\n.navbar_welcome .welcome {\r\n    color: #9370DB;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.btn.btn-outline-success {\r\n    /* color: #9370DB; */\r\n    border-color: #9370DB; \r\n    font-weight: 500;\r\n    font-family: 'jua', sans-serif;\r\n}\r\n\r\n.navbar_right {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.navbar_right .btn {\r\n    margin-left: auto;\r\n    background-color: #F6E6F6; /* Set the background color to match the navbar background color */\r\n/* Set the border color to match the text color */\r\n}\r\n\r\n.navbar_right .btn a {\r\n/* Set the text color of the button */\r\n    text-decoration: none;\r\n}\r\n\r\n.navbar_right .btn:hover {\r\n    transform: scale(1.05);\r\n}\r\n\r\n/* 사이드 메뉴 바 */\r\n.side_nav {\r\n    width: 200px;\r\n    height: 100%;\r\n    position: fixed;\r\n    background-color:#E0E0E0; /* 회색으로 변경 */\r\n    padding: 20px;\r\n}\r\n\r\n.basicMenu {\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n\r\n.basicMenu button {\r\n    background: none;\r\n    border: none;\r\n    cursor: pointer;\r\n    padding: 10px;\r\n    margin-bottom: 10px;\r\n    width: 100%;\r\n    text-align: left;\r\n    color: white; /* 버튼 텍스트 색상 흰색으로 설정 */\r\n    font-size: 16px;\r\n    transition: background-color 0.3s; /* 호버 효과 추가 */\r\n}\r\n\r\n.basicMenu button:hover {\r\n    background-color:#cccccc; /* 호버시 진한 회색으로 변경 */\r\n}\r\n\r\n.menuBar {\r\n  top: 95px; /* Adjust this value according to your fixed navbar height */\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.content {\r\n  padding: 30px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 8px;\r\n  background-color: #fff;\r\n  width: 500px;\r\n  margin-left:350px;\r\n  margin-right: 150px;\r\n}\r\n\r\n.section-title {\r\n  color: #9370DB;\r\n  margin-bottom: 20px;\r\n  font-size: 24px;\r\n  font-family: 'jua', sans-serif;\r\n}\r\n\r\n.bold-purple {\r\n  /* 문제점 1: 보라색 굵은 글씨 스타일 */\r\n  color: #9370db;\r\n  font-weight: bold;\r\n  font-family: 'jua', sans-serif;\r\n}\r\n\r\n.matching-form {\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin: 3px auto; /* 폼을 더 아래로 내림 */\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.radio-container {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.radio-label {\r\n  margin-right: 20px;\r\n}\r\n\r\n.matching-label {\r\n  /* 문제점 2: 매칭 내용 레이블 위치 조정 */\r\n  float: left;\r\n  margin-right: 10px;\r\n  color: #9370db;\r\n  font-weight: bold;\r\n  font-family: 'jua', sans-serif;\r\n}\r\n\r\n\r\n.btn-container {\r\n  /* 수정된 스타일 */\r\n  display: flex;\r\n  justify-content: flex-end; /* 오른쪽 정렬 */\r\n  align-items: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.apply-btn,\r\n.cancel-btn {\r\n  background-color: #F6E6F6;\r\n  color: #9370DB;\r\n  border: 1px solid #9370DB;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n  font-family: 'jua', sans-serif;\r\n}\r\n\r\n\r\n.result-message {\r\n  margin-top: 10px;\r\n  color: #008000; /* Green color for successful message */\r\n  font-weight: bold;\r\n  font-family: 'jua', sans-serif;\r\n}\r\n\r\n.content-container {\r\n  display: flex;\r\n  justify-content: center; /* 수평으로 가운데 정렬 */\r\n  margin-left: 350px;\r\n  margin-right: 150px;\r\n  align-items: flex-start;\r\n  margin-top: 100px;\r\n}\r\n\r\ntextarea {\r\n  /* 문제점 3: 텍스트 박스 크기 조정 */\r\n  width: 100%;\r\n  resize: vertical;\r\n  border-radius: 10px;\r\n  border: 1px solid #DDD;\r\n}\r\n\r\n#matchingTitle {\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: 1px solid #DDD;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n  margin-bottom: 15px;\r\n  transition: border-color 0.3s;\r\n  font-family: 'jua', sans-serif;\r\n}\r\n\r\ninput[type=\"text\"],\r\ntextarea {\r\n  /* 문제점 3: 텍스트 박스 크기 조정 */\r\n  width: 100%;\r\n  resize: vertical;\r\n  margin-top: 5px; /* 추가된 코드: 텍스트박스 위 여백 */\r\n}\r\n\r\n\r\n@import \"~bootstrap/dist/css/bootstrap.min.css\";\r\n@import \"~@fortawesome/fontawesome-free/css/all.min.css\";\r\n\r\n@font-face {\r\n  font-family: 'jua';\r\n  src:url(../../public/fonts/font.ttf)\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n    .side_nav{\r\n      display: none;\r\n    }\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}