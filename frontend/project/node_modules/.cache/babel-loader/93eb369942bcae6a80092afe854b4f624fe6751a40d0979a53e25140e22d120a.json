{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      posts: []\n    };\n  },\n  created() {\n    console.log(\"Attempting to fetch posts...\"); // 이 로그를 추가\n    this.fetchPosts();\n  },\n  computed: {\n    user() {\n      return JSON.parse(localStorage.getItem('user')) || {};\n    }\n  },\n  methods: {\n    fetchPosts() {\n      console.log(\"fetchPosts method called\");\n      axios.get('http://localhost:3001/api/getPostsForMatchingType12').then(response => {\n        console.log(\"API Response:\", response.data);\n        this.posts = response.data;\n      }).catch(error => {\n        console.error('Error fetching posts:', error);\n      });\n    },\n    // 내 정보 페이지로 이동\n    goToMyInfoPage() {\n      this.$router.push(\"/MyInfoPage\");\n    },\n    // 매칭 신청 페이지로 이동\n    goToMatchingApplyPage() {\n      this.$router.push(\"/MatchingApplyPage\");\n    },\n    // 매칭 현황 페이지로 이동\n    goToMatchingApplyDetailPage() {\n      this.$router.push(\"/MatchingApplyDetailPage\");\n    },\n    // 로그인 페이지로 이동\n    goToLoginPage() {\n      this.$router.push(\"/\");\n    },\n    goToMainPage() {\n      this.$router.push(\"/MainPage\");\n    },\n    goToNoticePage() {\n      this.$router.push(\"/NoticePage\");\n    },\n    goToMatchingBoardDetailPage(postID) {\n      this.$router.push({\n        name: 'MatchingBoardDetailPage',\n        params: {\n          postID: postID\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","posts","created","console","log","fetchPosts","computed","user","JSON","parse","localStorage","getItem","methods","get","then","response","catch","error","goToMyInfoPage","$router","push","goToMatchingApplyPage","goToMatchingApplyDetailPage","goToLoginPage","goToMainPage","goToNoticePage","goToMatchingBoardDetailPage","postID","name","params"],"sources":["C:\\Project-Matching-Us\\frontend\\project\\src\\views\\MatchingBoardPage.vue"],"sourcesContent":["  <template>\r\n  <div>\r\n    <!-- 네비게이션 바 -->\r\n    <!-- 상단 고정 네비게이션 바 -->\r\n    <nav class=\"navbar bg-body-tertiary fixed-top\">\r\n      <div class=\"container-fluid\">\r\n        <div class=\"navbar_logo\">\r\n          <!-- 매칭어스 로고 이미지 -->\r\n          <span class=\"MatchingUs\">\r\n            <img @click=\"goToMainPage\"\r\n              src=\"/image/logo.png\"\r\n              class=\"img\"\r\n              alt=\"매칭어스 로고\"\r\n            />\r\n          </span>\r\n        </div>\r\n        <div class=\"navbar_right\">\r\n          <div class=\"navbar_welcome\">\r\n            <!-- 사용자 이름과 환영 메시지 -->\r\n            <div class=\"welcome\">환영합니다, <strong class=\"name\">{{ user.name }}</strong>님! <i class=\"fa-regular fa-face-smile\"></i></div>\r\n          </div>\r\n          <!-- 로그아웃 버튼 -->\r\n          <button @click=\"goToLoginPage\" class=\"btn btn-outline-success\" style=\"color: #9370DB; text-decoration: none;\">\r\n            <i class=\"fa-solid fa-right-from-bracket\"></i> LOG OUT!\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n\r\n    <!-- 사이드 메뉴 바 -->\r\n    <!-- 좌측 고정 사이드 메뉴 바 -->\r\n    <nav class=\"menuBar fixed-top\">\r\n      \r\n      <div class=\"side_nav\">\r\n        <ul class=\"basicMenu\">\r\n          <li>\r\n            <!-- 내 정보 페이지로 이동 버튼 -->\r\n            <button @click=\"goToMyInfoPage\"><p style=\"text-decoration: none; color: white;\">내 정보</p></button>\r\n          </li>\r\n          <li>\r\n            <!-- 매칭 신청 페이지로 이동 버튼 -->\r\n            <button @click=\"goToMatchingApplyPage\"><p style=\"text-decoration: none; color: white;\">매칭 신청</p></button>\r\n          </li>\r\n          <li>\r\n            <!-- 매칭 현황 페이지로 이동 버튼 -->\r\n            <button @click=\"goToMatchingApplyDetailPage\"><p style=\"text-decoration: none; color: white;\">매칭 현황</p></button>\r\n          </li>\r\n          <li>\r\n                    <!-- 공지사항 페이지로 이동 -->\r\n                    <button @click=\"goToNoticePage\"><p style=\"text-decoration: none; color: white;\">공지사항</p></button>\r\n                </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n\r\n    <div class=\"content\">\r\n            <!-- 매칭을 신청한 사람들이 올려놓은 글들이 포스트잇의 형태로 들어가는 내용 -->\r\n\r\n            \r\n            <section id=\"postItsContainer\">\r\n            <div v-for=\"post in posts\" :key=\"post.postID\" @click=\"goToMatchingBoardDetailPage(post.postID)\" class=\"post-it\" :class=\"{ male: post.gender === 'male', female: post.gender === 'female' }\">\r\n                <h3>{{ post.matchingTitle }}</h3>\r\n                <p>{{ post.matchingType }}</p>\r\n                <p>{{ post.department }}</p>\r\n                <p>{{ post.matchingContent }}</p>\r\n                \r\n                \r\n            </div>\r\n                 \r\n            </section>\r\n            <!-- 포스트잇추가 -->\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n  data() {\r\n    return {\r\n        posts: []\r\n    };\r\n},\r\ncreated() {\r\n    console.log(\"Attempting to fetch posts...\"); // 이 로그를 추가\r\n    this.fetchPosts();\r\n},\r\ncomputed: {\r\n    user() {\r\n      return JSON.parse(localStorage.getItem('user')) || {};\r\n    }\r\n  },  \r\n  methods: {\r\n     fetchPosts() {\r\n      console.log(\"fetchPosts method called\");\r\n        axios.get('http://localhost:3001/api/getPostsForMatchingType12')\r\n            .then(response => {\r\n              console.log(\"API Response:\", response.data);  \r\n                this.posts = response.data;\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching posts:', error);\r\n            });\r\n    },\r\n       // 내 정보 페이지로 이동\r\n       goToMyInfoPage() {\r\n      this.$router.push(\"/MyInfoPage\");\r\n    },\r\n\r\n    // 매칭 신청 페이지로 이동\r\n    goToMatchingApplyPage() {\r\n      this.$router.push(\"/MatchingApplyPage\");\r\n    },\r\n\r\n    // 매칭 현황 페이지로 이동\r\n    goToMatchingApplyDetailPage() {\r\n      this.$router.push(\"/MatchingApplyDetailPage\");\r\n    },\r\n\r\n    // 로그인 페이지로 이동\r\n    goToLoginPage() {\r\n      this.$router.push(\"/\");\r\n    },\r\n\r\n    goToMainPage() {\r\n      this.$router.push(\"/MainPage\");\r\n    },\r\n\r\n    goToNoticePage() {\r\n      this.$router.push(\"/NoticePage\");\r\n    },\r\n    goToMatchingBoardDetailPage(postID) {\r\n      this.$router.push({ name: 'MatchingBoardDetailPage', params: { postID: postID } });\r\n}\r\n  \r\n\r\n}\r\n};\r\n</script>\r\n<style scoped> \r\nbody {\r\n    margin: 0;\r\n    background-color: white;\r\n}\r\n\r\n.MatchingUs {\r\n    font-size: 24px; /* 로고 사이즈를 24px로 조정 */\r\n    color: #9370DB;\r\n}\r\n\r\n.navbar {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    background-color: #F6E6F6;\r\n    padding: 8px 12px;\r\n}\r\n\r\n.navbar_logo {\r\n    font-size: 24px;\r\n}\r\n\r\n.navbar_logo .logo_image {\r\n    margin-right: 8px; \r\n}\r\n\r\n.navbar_welcome {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 30px; \r\n    margin-top: 10px;\r\n    font-weight: 400;\r\n}\r\n\r\n.navbar_welcome .welcome {\r\n    color: #9370DB;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.btn.btn-outline-success {\r\n    /* color: #9370DB; */\r\n    border-color: #9370DB; \r\n    font-weight: 500;\r\n}\r\n\r\n.navbar_right {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.navbar_right .btn {\r\n    margin-left: auto;\r\n    background-color: #F6E6F6; /* Set the background color to match the navbar background color */\r\n/* Set the border color to match the text color */\r\n}\r\n\r\n.navbar_right .btn a {\r\n/* Set the text color of the button */\r\n    text-decoration: none;\r\n}\r\n\r\n.navbar_right .btn:hover {\r\n    transform: scale(1.05);\r\n}\r\n\r\n/* 사이드 메뉴 바 */\r\n.side_nav {\r\n    width: 200px;\r\n    height: 100%;\r\n    position: fixed;\r\n    background-color:#E0E0E0; /* 회색으로 변경 */\r\n    padding: 20px;\r\n}\r\n\r\n.basicMenu {\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n\r\n.basicMenu button {\r\n    background: none;\r\n    border: none;\r\n    cursor: pointer;\r\n    padding: 10px;\r\n    margin-bottom: 10px;\r\n    width: 100%;\r\n    text-align: left;\r\n    color: white; /* 버튼 텍스트 색상 흰색으로 설정 */\r\n    font-size: 16px;\r\n    transition: background-color 0.3s; /* 호버 효과 추가 */\r\n}\r\n\r\n.basicMenu button:hover {\r\n    background-color:#cccccc; /* 호버시 진한 회색으로 변경 */\r\n}\r\n\r\n.container {\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n\r\n.board-list {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    margin-top: 100px;\r\n}\r\n\r\n.board-list li {\r\n    background-color: white;\r\n    border-radius: 10px;\r\n    padding: 15px;\r\n    margin-bottom: 15px;\r\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n    height: 400px;\r\n    width: 400px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    flex: 0 0 calc(50% - 20px);\r\n}\r\n\r\n.board-list .btn {\r\n    margin-top: auto;\r\n    background-color: #F6E6F6;\r\n    color: #9370DB; /* 버튼 텍스트 색상 흰색으로 설정 */\r\n    border-color: #F6E6F6;\r\n    width: 100%;\r\n}\r\n\r\n.board-list .btn:hover {\r\n    transform: scale(1.05); \r\n}\r\n\r\n\r\n.content {\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 100px;\r\n  padding-left: 200px;\r\n  margin: 20px 0;\r\n  border: none; /* 테두리 제거 */ \r\n}\r\n\r\n\r\n.post-it {\r\n    width: 300px;\r\n    height: 250px;\r\n    margin: 10px;\r\n    padding: 10px;\r\n    box-shadow: 2px 2px 5px #aaa;\r\n    background-color: #fefabc; /* Default yellow color for post-it */\r\n    transition: transform 0.2s; /* Animation for hover effect */\r\n    font-size: 25px;\r\n}\r\n\r\n.post-it:hover {\r\n    transform: scale(1.05); /* Slightly enlarge the post-it on hover */\r\n}\r\n\r\n\r\n.post-it.male {\r\n    background-color: #deeeff; /* Blue color for male */\r\n    font-family: 'gangwon', sans-serif;\r\n}\r\n\r\n.post-it.female {\r\n    background-color: #ffe4ee; /* Pink color for female */\r\n    font-family: 'gangwon', sans-serif;\r\n}\r\n\r\n#postItsContainer {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 20px;\r\n  justify-items: center;\r\n  margin-left: 150px; /* Original margin-left value */\r\n  transition: margin-left 0.3s; /* Add transition effect for smooth animation */\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  #postItsContainer {\r\n    grid-template-columns: repeat(2, 1fr); /* 600px 이상 화면: 한 줄에 2개씩 */\r\n  }\r\n}\r\n\r\n@font-face {\r\n  font-family: 'gangwon';\r\n  src:url(../../public/fonts/강원교육현옥샘.ttf)\r\n}\r\n\r\n\r\n@media screen and (max-width: 768px) {\r\n  .side_nav {\r\n    display: none;\r\n  }\r\n}\r\n\r\n\r\n@import \"~bootstrap/dist/css/bootstrap.min.css\";\r\n@import \"~@fortawesome/fontawesome-free/css/all.min.css\";\r\n</style>"],"mappings":";AA4EA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACHC,KAAK,EAAE;IACX,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAG;IACNC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC,EAAE;IAC7C,IAAI,CAACC,UAAU,CAAC,CAAC;EACrB,CAAC;EACDC,QAAQ,EAAE;IACNC,IAAIA,CAAA,EAAG;MACL,OAAOC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACvD;EACF,CAAC;EACDC,OAAO,EAAE;IACNP,UAAUA,CAAA,EAAG;MACZF,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACrCL,KAAK,CAACc,GAAG,CAAC,qDAAqD,EAC1DC,IAAI,CAACC,QAAO,IAAK;QAChBZ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEW,QAAQ,CAACf,IAAI,CAAC;QACzC,IAAI,CAACC,KAAI,GAAIc,QAAQ,CAACf,IAAI;MAC9B,CAAC,EACAgB,KAAK,CAACC,KAAI,IAAK;QACZd,OAAO,CAACc,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD,CAAC,CAAC;IACV,CAAC;IACE;IACAC,cAAcA,CAAA,EAAG;MAClB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;IAClC,CAAC;IAED;IACAC,qBAAqBA,CAAA,EAAG;MACtB,IAAI,CAACF,OAAO,CAACC,IAAI,CAAC,oBAAoB,CAAC;IACzC,CAAC;IAED;IACAE,2BAA2BA,CAAA,EAAG;MAC5B,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC,0BAA0B,CAAC;IAC/C,CAAC;IAED;IACAG,aAAaA,CAAA,EAAG;MACd,IAAI,CAACJ,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;IACxB,CAAC;IAEDI,YAAYA,CAAA,EAAG;MACb,IAAI,CAACL,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;IAChC,CAAC;IAEDK,cAAcA,CAAA,EAAG;MACf,IAAI,CAACN,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;IAClC,CAAC;IACDM,2BAA2BA,CAACC,MAAM,EAAE;MAClC,IAAI,CAACR,OAAO,CAACC,IAAI,CAAC;QAAEQ,IAAI,EAAE,yBAAyB;QAAEC,MAAM,EAAE;UAAEF,MAAM,EAAEA;QAAO;MAAE,CAAC,CAAC;IACxF;EAGA;AACA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}