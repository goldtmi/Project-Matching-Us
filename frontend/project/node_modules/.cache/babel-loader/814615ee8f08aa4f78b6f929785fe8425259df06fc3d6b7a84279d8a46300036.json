{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      editMode: false,\n      originalFormData: {},\n      selectedCollege: '',\n      // 단과대 선택을 저장하는 속성 추가\n      departments: [] // 선택한 단과대에 해당하는 학과들을 저장하는 배열\n    };\n  },\n\n  methods: {\n    // 내 정보 페이지로 이동\n    goToMyInfoPage() {\n      this.$router.push(\"/MyInfoPage\");\n    },\n    // 매칭 신청 페이지로 이동\n    goToMatchingApplyPage() {\n      this.$router.push(\"/MatchingApplyPage\");\n    },\n    // 매칭 현황 페이지로 이동\n    goToMatchingApplyDetailPage() {\n      this.$router.push(\"/MatchingApplyDetailPage\");\n    },\n    // 로그인 페이지로 이동\n    goToLoginPage() {\n      this.$router.push(\"/\");\n    },\n    goToMainPage() {\n      this.$router.push(\"/MainPage\");\n    },\n    goToNoticePage() {\n      this.$router.push(\"/NoticePage\");\n    },\n    // 수정 모드를 활성화하고 폼 필드를 편집 가능하도록 만드는 메소드입니다.\n    enableEditMode() {\n      this.editMode = true;\n      this.enableFormFields();\n    },\n    enableFormFields() {\n      const formFields = this.$refs.myForm.elements;\n      for (let i = 0; i < formFields.length; i++) {\n        // 학번, 이름 필드는 수정 불가능하도록 설정\n        if (formFields[i].id !== 'studentID' && formFields[i].id !== 'name' && formFields[i].id !== 'age') {\n          // 성별 라디오 버튼은 언제나 비활성화 상태로 유지\n          if (formFields[i].type === 'radio' && formFields[i].name === 'gender') {\n            formFields[i].disabled = true;\n          } else {\n            formFields[i].disabled = !this.editMode;\n          }\n        }\n      }\n    },\n    saveOriginalFormData() {\n      const formFields = this.$refs.myForm.elements;\n      for (let i = 0; i < formFields.length; i++) {\n        // 학번, 이름, 성별, 출생연도 필드는 저장하지 않음\n        if (formFields[i].id !== 'studentID' && formFields[i].id !== 'name' && formFields[i].type !== 'radio' && formFields[i].id !== 'age') {\n          this.originalFormData[formFields[i].id] = formFields[i].value;\n        }\n      }\n    },\n    // 폼 필드 값을 원본 폼 데이터로 복원하는 메소드입니다.\n    restoreOriginalFormData() {\n      const formFields = this.$refs.myForm.elements;\n      for (let i = 0; i < formFields.length; i++) {\n        // 학번, 이름, 성별 필드는 복원하지 않음\n        if (formFields[i].id !== 'studentID' && formFields[i].id !== 'name' && formFields[i].type !== 'radio') {\n          formFields[i].value = this.originalFormData[formFields[i].id];\n        }\n      }\n    },\n    // 변경 사항을 저장하고 수정 모드를 비활성화하는 메소드입니다.\n    saveChanges() {\n      this.editMode = false;\n      this.disableFormFields();\n      // 이곳에 서버로 변경 사항을 저장하는 로직이나 다른 작업을 추가할 수 있습니다.\n    },\n\n    // 변경 사항을 취소하고 수정 모드를 비활성화하는 메소드입니다.\n    cancelChanges() {\n      this.editMode = false;\n      this.disableFormFields();\n      this.restoreOriginalFormData(); // 변경 사항을 취소하면 원본 폼 데이터로 복원합니다.\n    },\n\n    // 폼 필드를 편집 불가능하도록 비활성화하는 메소드입니다.\n    disableFormFields() {\n      const formFields = this.$refs.myForm.elements;\n      for (let i = 0; i < formFields.length; i++) {\n        // 학번, 이름, 성별 필드는 수정 불가능하도록 설정\n        if (formFields[i].id !== 'studentID' && formFields[i].id !== 'name' && formFields[i].type !== 'radio') {\n          formFields[i].disabled = true;\n        }\n      }\n    },\n    // 사용자가 단과대를 선택했을 때 학과들을 업데이트하는 메소드\n    updateDepartments() {\n      // 선택한 단과대에 해당하는 학과들을 가져오는 로직을 구현합니다.\n      // 예를 들어:\n      switch (this.selectedCollege) {\n        case '공과대학':\n          this.departments = [\"전기공학부\", \"전기공학전공\", \"제어계측공학전공\", \"디스플레이반도체공학전공\", \"기계공학부\", \"기계공학전공\", \"기계설계공학전공\", \"에너지수송시스템공학부\", \"냉동공조공학전공\", \"기계시스템공학전공\", \"조선해양시스템공학전공\", \"화학공학과\", \"공업화학고분자공학부\", \"공업화학전공\", \"고분자공학전공\", \"나노융합공학과\", \"시스템경영안전공학부\", \"산업경영공학전공\", \"기술데이터공학전공\", \"안전공학전공\", \"소방공학과\", \"융합소재공학부\", \"금속공학전공\", \"재료공학전공\", \"신소재시스템공학전공\", \"건축공학과\", \"지속가능공학부\", \"토목공학전공\", \"생태공학전공\"]; // 실제 '공과대학'에 속하는 학과들로 대체\n          break;\n        case '인문사회과학대학':\n          this.departments = [\"국어국문학과\", \"영어영문학부\", \"일어일문학부\", \"사학과\", \"경제학과\", \"법학과\", \"행정복지학부\", \"국제지역학부\", \"중국학과\", \"정치외교학과\", \"유아교육과\", \"패션디자인학과\", \"사회계열\"]; // 실제 '인문사회과학대학'에 속하는 학과들로 대체\n          break;\n        case '자연과학대학':\n          this.departments = [\"응용수학과\", \"물리학과\", \"화학과\", \"미생물학과\", \"간호학과\", \"과학컴퓨팅학과\"]; // 실제 '인문사회과학대학'에 속하는 학과들로 대체\n          break;\n        case '경영대학':\n          this.departments = [\"경영학부\", \"국제통상학부\"]; // 실제 '인문사회과학대학'에 속하는 학과들로 대체\n          break;\n        case '수산과학대학':\n          this.departments = [\"식품과학부\", \"식품공학전공\", \"식품영양학전공\", \"생물공학과\", \"해양생산시스템관리학부\", \"수산생명과학부\", \"양식응용생명과학전공\", \"자원생물학전공\", \"수산생명의학과\", \"수해양산업교육과\", \"해양수산경영경제학부\", \"해양수산경영학전공\", \"자원환경경제학전공\"];\n          break;\n        case '환경해양대학':\n          this.departments = [\"지구환경시스템과학부\", \"환경공학전공\", \"해양학전공\", \"환경지질과학전공\", \"환경대기과학전공\", \"공간정보시스템공학전공\", \"해양공학과\", \"에너지자원공학과\"];\n          break;\n        case '정보융합대학':\n          this.departments = [\"데이터정보과학부\", \"빅데이터융합전공\", \"통계데이터사이언스전공\", \"미디어커뮤니케이션학부\", \"언론정보전공\", \"휴먼ICT융합전공\", \"스마트헬스케어학부\", \"의공학전공\", \"해양스포츠전공\", \"휴먼바이오융합전공\", \"전자정보통신공학부\", \"전자공학전공\", \"정보통신공학전공\", \"조형학부\", \"건축학전공\", \"공업디자인전공\", \"시각디자인전공\"];\n          break;\n        case '미래융합대학':\n          this.departments = [\"융합인재개발학부\", \"평생교육상담학전공\", \"경찰범죄심리학전공\", \"융합공학부\", \"기계조선에너지시스템공학전공\", \"전기전자소프트웨어공학전공\"];\n          break;\n        case '글로벌자율전공학부':\n          this.departments = [\"글로벌자율전공학부\"];\n          break;\n\n        // 다른 단과대에 대한 학과들도 필요에 따라 추가합니다.\n        default:\n          this.departments = [];\n          break;\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","editMode","originalFormData","selectedCollege","departments","methods","goToMyInfoPage","$router","push","goToMatchingApplyPage","goToMatchingApplyDetailPage","goToLoginPage","goToMainPage","goToNoticePage","enableEditMode","enableFormFields","formFields","$refs","myForm","elements","i","length","id","type","name","disabled","saveOriginalFormData","value","restoreOriginalFormData","saveChanges","disableFormFields","cancelChanges","updateDepartments"],"sources":["C:\\Users\\김혜빈\\Desktop\\Connect\\frontend\\project\\src\\views\\MyInfoPage.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 네비게이션 바 -->\n    <!-- 상단 고정 네비게이션 바 -->\n    <nav class=\"navbar bg-body-tertiary fixed-top\">\n      <div class=\"container-fluid\">\n        <div class=\"navbar_logo\">\n          <!-- 매칭어스 로고 이미지 -->\n          <span class=\"MatchingUs\">\n            <img @click=\"goToMainPage\"\n              src=\"/image/logo.png\"\n              class=\"img\"\n              alt=\"매칭어스 로고\"\n            />\n          </span>\n        </div>\n        <div class=\"navbar_right\">\n          <div class=\"navbar_welcome\">\n            <!-- 사용자 이름과 환영 메시지 -->\n            <div class=\"welcome\">환영합니다, <strong class=\"name\">김혜빈</strong>님! <i class=\"fa-regular fa-face-smile\"></i></div>\n          </div>\n          <!-- 로그아웃 버튼 -->\n          <button @click=\"goToLoginPage\" class=\"btn btn-outline-success\" style=\"color: #9370DB; text-decoration: none;\">\n            <i class=\"fa-solid fa-right-from-bracket\"></i> LOG OUT!\n          </button>\n        </div>\n      </div>\n    </nav>\n\n    <!-- 사이드 메뉴 바 -->\n    <!-- 좌측 고정 사이드 메뉴 바 -->\n    <nav class=\"menuBar fixed-top\">\n      \n      <div class=\"side_nav\">\n        <ul class=\"basicMenu\">\n          <li>\n            <!-- 내 정보 페이지로 이동 버튼 -->\n            <button @click=\"goToMyInfoPage\"><p style=\"text-decoration: none; color: white;\">내 정보</p></button>\n          </li>\n          <li>\n            <!-- 매칭 신청 페이지로 이동 버튼 -->\n            <button @click=\"goToMatchingApplyPage\"><p style=\"text-decoration: none; color: white;\">매칭 신청</p></button>\n          </li>\n          <li>\n            <!-- 매칭 현황 페이지로 이동 버튼 -->\n            <button @click=\"goToMatchingApplyDetailPage\"><p style=\"text-decoration: none; color: white;\">매칭 현황</p></button>\n          </li>\n          <li>\n                    <!-- 공지사항 페이지로 이동 -->\n                    <button @click=\"goToNoticePage\"><p style=\"text-decoration: none; color: white;\">공지사항</p></button>\n                </li>\n        </ul>\n      </div>\n    </nav>\n\n    <div class=\"content-container\">\n      <div class=\"content\">\n        <form ref=\"myForm\">\n          <label for=\"studentID\">학번 (ID)</label>\n          <input type=\"text\" id=\"studentID\" required disabled>\n          <br>\n\n          \n          <label for=\"name\">이름</label>\n          <input type=\"text\" id=\"name\" required disabled>\n          <br>\n\n    <div class=\"form-group\">\n      <label for=\"gender\" class=\"radio-container\">남자\n        <input type=\"radio\" id=\"gender-male\" name=\"gender\" value=\"male\">\n      </label>\n      <label for=\"gender\" class=\"radio-container\">여자\n        <input type=\"radio\" id=\"gender-female\" name=\"gender\" value=\"female\">\n      </label>\n    </div>\n\n          <label for=\"residence\">거주지</label>\n          <select id=\"residence\" :disabled=\"!editMode\">\n        <option value=\"중구\">중구</option>\n        <option value=\"서구\">서구</option>\n        <option value=\"동구\">동구</option>\n        <option value=\"영도구\">영도구</option>\n        <option value=\"부산진구\">부산진구</option>\n        <option value=\"동래구\">동래구</option>\n        <option value=\"남구\">남구</option>\n        <option value=\"북구\">북구</option>\n        <option value=\"해운대구\">해운대구</option>\n        <option value=\"사하구\">사하구</option>\n        <option value=\"금정구\">금정구</option>\n        <option value=\"강서구\">강서구</option>\n        <option value=\"연제구\">연제구</option>\n        <option value=\"수영구\">수영구</option>\n        <option value=\"사상구\">사상구</option>\n        <option value=\"기장군\">기장군</option>\n        <option value=\"그외\">그외</option>\n          </select>\n          <br>\n\n<label for=\"age\" required>출생연도</label>\n<select id=\"age\" disabled>\n  <option value=\"2004\">2004년생</option>\n  <option value=\"2003\">2003년생</option>\n  <option value=\"2002\">2002년생</option>\n  <option value=\"2001\">2001년생</option>\n  <option value=\"2000\">2000년생</option>\n  <option value=\"1999\">1999년생</option>\n  <option value=\"1998\">1998년생</option>\n  <option value=\"1997\">1997년생</option>\n  <option value=\"1996\">1996년생</option>\n  <option value=\"1995\">1995년생</option>\n</select>\n<br>\n\n<label for=\"college\">단과대학</label>\n<select id=\"college\" v-model=\"selectedCollege\" @change=\"updateDepartments\" :disabled=\"!editMode\">\n        <option value=\"공과대학\">공과대학</option>\n        <option value=\"인문사회과학대학\">인문사회과학대학</option>\n        <option value=\"자연과학대학\">자연과학대학</option>\n        <option value=\"경영대학\">경영대학</option>\n        <option value=\"수산과학대학\">수산과학대학</option>\n        <option value=\"환경해양대학\">환경해양대학</option>\n        <option value=\"정보융합대학\">정보융합대학</option>\n        <option value=\"미래융합대학\">미래융합대학</option>\n        <option value=\"글로벌자율전공학부\">글로벌자율전공학부</option>\n</select>\n<br />\n\n<!-- 소속학부 select element -->\n<label for=\"department\">소속학부</label>\n<select id=\"department\" :disabled=\"!editMode || !selectedCollege\">\n  <option v-for=\"dept in departments\" :value=\"dept\" :key=\"dept\">{{ dept }}</option>\n</select>\n<br>\n\n          <label for=\"email\">이메일:</label>\n          <input type=\"email\" id=\"email\" required pattern=\".+@pknu\\.ac\\.kr\" title=\"부경대학교 이메일로 입력해주세요 (예: example@pknu.ac.kr)\" :disabled=\"!editMode\">\n          <br>\n\n          <!-- 수정 버튼을 클릭했을 때 취소 버튼도 함께 보여지도록 템플릿을 수정합니다. -->\n          <button v-if=\"!editMode\" type=\"button\" class=\"edit-btn\" @click=\"enableEditMode\">\n            수정\n          </button>\n\n\n          <!-- 수정 모드일 때는 저장과 취소 버튼을 보여줍니다. -->\n          <div v-if=\"editMode\">\n            <button type=\"button\" class=\"save-btn\" @click=\"saveChanges\">\n              저장\n            </button>\n            <button type=\"button\" class=\"cancel-btn\" @click=\"cancelChanges\">\n              취소\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\ndata() {\n  return {\n    editMode: false,\n    originalFormData: {},\n    selectedCollege: '', // 단과대 선택을 저장하는 속성 추가\n    departments: [], // 선택한 단과대에 해당하는 학과들을 저장하는 배열\n  };\n},\n\n  methods: {\n    // 내 정보 페이지로 이동\n    goToMyInfoPage() {\n      this.$router.push(\"/MyInfoPage\");\n    },\n\n    // 매칭 신청 페이지로 이동\n    goToMatchingApplyPage() {\n      this.$router.push(\"/MatchingApplyPage\");\n    },\n\n    // 매칭 현황 페이지로 이동\n    goToMatchingApplyDetailPage() {\n      this.$router.push(\"/MatchingApplyDetailPage\");\n    },\n\n    // 로그인 페이지로 이동\n    goToLoginPage() {\n      this.$router.push(\"/\");\n    },\n\n    goToMainPage() {\n      this.$router.push(\"/MainPage\");\n    },\n\n    goToNoticePage() {\n      this.$router.push(\"/NoticePage\");\n    },\n    // 수정 모드를 활성화하고 폼 필드를 편집 가능하도록 만드는 메소드입니다.\n    enableEditMode() {\n      this.editMode = true;\n      this.enableFormFields();\n    },\n\n    enableFormFields() {\n  const formFields = this.$refs.myForm.elements;\n  for (let i = 0; i < formFields.length; i++) {\n    // 학번, 이름 필드는 수정 불가능하도록 설정\n    if (\n      formFields[i].id !== 'studentID' &&\n      formFields[i].id !== 'name' &&\n      formFields[i].id !== 'age'\n    ) {\n      // 성별 라디오 버튼은 언제나 비활성화 상태로 유지\n      if (formFields[i].type === 'radio' && (formFields[i].name === 'gender')) {\n        formFields[i].disabled = true;\n      } else {\n        formFields[i].disabled = !this.editMode;\n      }\n    }\n  }\n},\n\n\nsaveOriginalFormData() {\n  const formFields = this.$refs.myForm.elements;\n  for (let i = 0; i < formFields.length; i++) {\n    // 학번, 이름, 성별, 출생연도 필드는 저장하지 않음\n    if (\n      formFields[i].id !== 'studentID' &&\n      formFields[i].id !== 'name' &&\n      formFields[i].type !== 'radio' &&\n      formFields[i].id !== 'age'\n    ) {\n      this.originalFormData[formFields[i].id] = formFields[i].value;\n    }\n  }\n},\n\n    // 폼 필드 값을 원본 폼 데이터로 복원하는 메소드입니다.\n    restoreOriginalFormData() {\n      const formFields = this.$refs.myForm.elements;\n      for (let i = 0; i < formFields.length; i++) {\n        // 학번, 이름, 성별 필드는 복원하지 않음\n        if (formFields[i].id !== 'studentID' && formFields[i].id !== 'name' && formFields[i].type !== 'radio') {\n          formFields[i].value = this.originalFormData[formFields[i].id];\n        }\n      }\n    },\n\n    // 변경 사항을 저장하고 수정 모드를 비활성화하는 메소드입니다.\n    saveChanges() {\n      this.editMode = false;\n      this.disableFormFields();\n      // 이곳에 서버로 변경 사항을 저장하는 로직이나 다른 작업을 추가할 수 있습니다.\n    },\n\n    // 변경 사항을 취소하고 수정 모드를 비활성화하는 메소드입니다.\n    cancelChanges() {\n      this.editMode = false;\n      this.disableFormFields();\n      this.restoreOriginalFormData(); // 변경 사항을 취소하면 원본 폼 데이터로 복원합니다.\n    },\n\n\n    // 폼 필드를 편집 불가능하도록 비활성화하는 메소드입니다.\n    disableFormFields() {\n      const formFields = this.$refs.myForm.elements;\n      for (let i = 0; i < formFields.length; i++) {\n        // 학번, 이름, 성별 필드는 수정 불가능하도록 설정\n        if (formFields[i].id !== 'studentID' && formFields[i].id !== 'name' && formFields[i].type !== 'radio') {\n          formFields[i].disabled = true;\n        }\n      }\n    },\n      // 사용자가 단과대를 선택했을 때 학과들을 업데이트하는 메소드\n  updateDepartments() {\n    // 선택한 단과대에 해당하는 학과들을 가져오는 로직을 구현합니다.\n    // 예를 들어:\n    switch (this.selectedCollege) {\n      case '공과대학':\n        this.departments = [\"전기공학부\",\n        \"전기공학전공\",\n        \"제어계측공학전공\",\n        \"디스플레이반도체공학전공\",\n        \"기계공학부\",\n        \"기계공학전공\",\n        \"기계설계공학전공\",\n        \"에너지수송시스템공학부\",\n        \"냉동공조공학전공\",\n        \"기계시스템공학전공\",\n        \"조선해양시스템공학전공\",\n        \"화학공학과\",\n        \"공업화학고분자공학부\",\n        \"공업화학전공\",\n        \"고분자공학전공\",\n        \"나노융합공학과\",\n        \"시스템경영안전공학부\",\n        \"산업경영공학전공\",\n        \"기술데이터공학전공\",\n        \"안전공학전공\",\n        \"소방공학과\",\n        \"융합소재공학부\",\n        \"금속공학전공\",\n        \"재료공학전공\",\n        \"신소재시스템공학전공\",\n        \"건축공학과\",\n        \"지속가능공학부\",\n        \"토목공학전공\",\n        \"생태공학전공\",]; // 실제 '공과대학'에 속하는 학과들로 대체\n        break;\n\n      case '인문사회과학대학':\n        this.departments = [\"국어국문학과\",\n          \"영어영문학부\",\n          \"일어일문학부\",\n          \"사학과\",\n          \"경제학과\",\n          \"법학과\",\n          \"행정복지학부\",\n          \"국제지역학부\",\n          \"중국학과\",\n          \"정치외교학과\",\n          \"유아교육과\",\n          \"패션디자인학과\",\n          \"사회계열\"]; // 실제 '인문사회과학대학'에 속하는 학과들로 대체\n        break;\n\n        case '자연과학대학':\n        this.departments = [\"응용수학과\",\n          \"물리학과\",\n          \"화학과\",\n          \"미생물학과\",\n          \"간호학과\",\n          \"과학컴퓨팅학과\"]; // 실제 '인문사회과학대학'에 속하는 학과들로 대체\n        break;\n\n        case '경영대학':\n        this.departments = [\"경영학부\", \"국제통상학부\"]; // 실제 '인문사회과학대학'에 속하는 학과들로 대체\n        break;\n\n        case '수산과학대학':\n        this.departments = [\"식품과학부\",\n          \"식품공학전공\",\n          \"식품영양학전공\",\n          \"생물공학과\",\n          \"해양생산시스템관리학부\",\n          \"수산생명과학부\",\n          \"양식응용생명과학전공\",\n          \"자원생물학전공\",\n          \"수산생명의학과\",\n          \"수해양산업교육과\",\n          \"해양수산경영경제학부\",\n          \"해양수산경영학전공\",\n          \"자원환경경제학전공\"]; \n        break;\n\n        case '환경해양대학':\n        this.departments = [\"지구환경시스템과학부\",\n          \"환경공학전공\",\n          \"해양학전공\",\n          \"환경지질과학전공\",\n          \"환경대기과학전공\",\n          \"공간정보시스템공학전공\",\n          \"해양공학과\",\n          \"에너지자원공학과\"]; \n        break;\n\n        case '정보융합대학':\n        this.departments = [\"데이터정보과학부\",\n          \"빅데이터융합전공\",\n          \"통계데이터사이언스전공\",\n          \"미디어커뮤니케이션학부\",\n          \"언론정보전공\",\n          \"휴먼ICT융합전공\",\n          \"스마트헬스케어학부\",\n          \"의공학전공\",\n          \"해양스포츠전공\",\n          \"휴먼바이오융합전공\",\n          \"전자정보통신공학부\",\n          \"전자공학전공\",\n          \"정보통신공학전공\",\n          \"조형학부\",\n          \"건축학전공\",\n          \"공업디자인전공\",\n          \"시각디자인전공\"]; \n        break;\n\n        case '미래융합대학':\n        this.departments = [\"융합인재개발학부\",\n          \"평생교육상담학전공\",\n          \"경찰범죄심리학전공\",\n          \"융합공학부\",\n          \"기계조선에너지시스템공학전공\",\n          \"전기전자소프트웨어공학전공\"]; \n        break;\n\n          case '글로벌자율전공학부':\n            this.departments = [\"글로벌자율전공학부\"];\n            break;\n\n\n      \n      // 다른 단과대에 대한 학과들도 필요에 따라 추가합니다.\n      default:\n        this.departments = [];\n        break;\n    }\n  },\n},\n};\n\n\n</script>\n\n<style scoped>\nbody {\n    margin: 0;\n    background-color: white;\n}\n\n.MatchingUs {\n    font-size: 28px;\n    color: #9370DB;\n}\n\n/* 이미지의 크기를 조절하는 .img 클래스에 스타일 추가 */\n.img {\n    width: 200px; /* 이미지의 너비를 200px로 조정 */\n    height: auto; /* 높이를 자동으로 조정하여 가로 세로 비율 유지 */\n    margin-left: -20px; /* 이미지를 왼쪽으로 20px 이동 */\n}\n\n\n.navbar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #F6E6F6;\n    padding: 8px 12px;\n}\n\n.navbar_logo {\n    font-size: 24px;\n}\n\n.navbar_logo .logo_image {\n    margin-right: 8px; \n}\n\n.navbar_welcome {\n    display: flex;\n    align-items: center;\n    margin-right: 30px; \n    margin-top: 10px;\n    font-weight: 400;\n}\n\n.navbar_welcome .welcome {\n    color: #9370DB;\n    margin-bottom: 10px;\n}\n\n.btn.btn-outline-success {\n    /* color: #9370DB; */\n    border-color: #9370DB; \n    font-weight: 500;\n}\n\n.navbar_right {\n    display: flex;\n    align-items: center;\n}\n\n.navbar_right .btn {\n    margin-left: auto;\n    background-color: #F6E6F6; /* Set the background color to match the navbar background color */\n/* Set the border color to match the text color */\n}\n\n.navbar_right .btn a {\n/* Set the text color of the button */\n    text-decoration: none;\n}\n\n.navbar_right .btn:hover {\n    transform: scale(1.05);\n}\n\n\n/* 사이드 메뉴 바 */\n.side_nav {\n  width: 200px;\n  height: 100%;\n  position: fixed;\n  background-color: #e0e0e0; /* 회색으로 변경 */\n  padding: 20px;\n}\n\n.basicMenu {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.basicMenu button {\n  background: none;\n  border: none;\n  cursor: pointer;\n  padding: 10px;\n  margin-bottom: 10px;\n  width: 100%;\n  text-align: left;\n  color: white; /* 버튼 텍스트 색상 흰색으로 설정 */\n  font-size: 16px;\n  transition: background-color 0.3s; /* 호버 효과 추가 */\n}\n\n.basicMenu button:hover {\n  background-color: #cccccc; /* 호버시 진한 회색으로 변경 */\n}\n\n.menuBar {\n  top: 95px; /* Adjust this value according to your fixed navbar height */\n}\n\n.content-container {\n  display: flex;\n  justify-content: center; /* 수평으로 가운데 정렬 */\n  align-items: flex-start;\n  margin-top: 100px;\n}\n\n.content {\n  padding: 30px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  background-color: #fff;\n  width: 500px;\n}\n\n.content h2 {\n  text-align: center;\n  margin-bottom: 20px;\n  color: #9370DB;\n  font-size: 24px;\n}\n\n/* 폼 요소 스타일 */\nform input[type=\"text\"],\nform input[type=\"email\"],\nform select {\n  width: 100%;\n  padding: 12px;\n  border: 1px solid #DDD;\n  border-radius: 5px;\n  font-size: 16px;\n  margin-bottom: 15px;\n  transition: border-color 0.3s;\n}\n\nform input[type=\"text\"]:focus,\nform input[type=\"email\"]:focus,\nform select:focus {\n  border-color: #9370DB; /* 포커스 시 밝은 보라색 테두리 */\n}\n\nform label {\n  display: block;\n  margin-bottom: 5px;\n  color: #9370DB;\n  font-weight: bold;\n}\n\nform button {\n  display: inline-block;\n  padding: 10px 20px;\n  color: #FFF;\n  background-color: #9370DB;\n  border: none;\n  border-radius: 5px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\nform button.edit-btn {\n  background-color: #F6E6F6;\n  color: #9370DB;\n  border: 1px solid #9370DB;\n}\n\nform button.save-btn {\n  background-color: #4CAF50;\n}\n\nform button.cancel-btn {\n  background-color: #f44336;\n}\n\nform .form-group {\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px; /* 라디오 버튼 사이의 간격을 늘립니다 */\n}\n\nform .form-group label {\n  margin-right: 10px;\n}\n\nform .form-group input[type=\"radio\"] {\n  margin-right: 5px; /* 라디오 버튼 사이의 간격을 늘립니다 */\n}\n\n\n/* 미디어 쿼리 */\n@media screen and (max-width: 768px) {\n  .side_nav {\n    display: none;\n  }\n}\n</style>\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}