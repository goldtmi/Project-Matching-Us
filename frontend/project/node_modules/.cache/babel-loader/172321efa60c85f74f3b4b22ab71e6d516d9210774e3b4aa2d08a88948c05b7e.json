{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelRadio as _vModelRadio, vModelSelect as _vModelSelect, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5e0263be\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"container-title\"\n}, \"MATCHING US\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"studentID\"\n}, \"학번 (ID)\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"비밀번호\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"passwordVerify\"\n}, \"비밀번호 확인\", -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"name\"\n}, \"이름\", -1 /* HOISTED */));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_11 = {\n  class: \"gender-group\"\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"male\"\n}, \"남자\", -1 /* HOISTED */));\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"female\"\n}, \"여자\", -1 /* HOISTED */));\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"residence\"\n}, \"부산광역시 거주지 (학기중 거주지)\", -1 /* HOISTED */));\nconst _hoisted_16 = /*#__PURE__*/_createStaticVNode(\"<option value=\\\"중구\\\" data-v-5e0263be>중구</option><option value=\\\"서구\\\" data-v-5e0263be>서구</option><option value=\\\"동구\\\" data-v-5e0263be>동구</option><option value=\\\"영도구\\\" data-v-5e0263be>영도구</option><option value=\\\"부산진구\\\" data-v-5e0263be>부산진구</option><option value=\\\"동래구\\\" data-v-5e0263be>동래구</option><option value=\\\"남구\\\" data-v-5e0263be>남구</option><option value=\\\"북구\\\" data-v-5e0263be>북구</option><option value=\\\"해운대구\\\" data-v-5e0263be>해운대구</option><option value=\\\"사하구\\\" data-v-5e0263be>사하구</option><option value=\\\"금정구\\\" data-v-5e0263be>금정구</option><option value=\\\"강서구\\\" data-v-5e0263be>강서구</option><option value=\\\"연제구\\\" data-v-5e0263be>연제구</option><option value=\\\"수영구\\\" data-v-5e0263be>수영구</option><option value=\\\"사상구\\\" data-v-5e0263be>사상구</option><option value=\\\"기장군\\\" data-v-5e0263be>기장군</option><option value=\\\"그외\\\" data-v-5e0263be>그외</option>\", 17);\nconst _hoisted_33 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_34 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"age\"\n}, \"출생연도\", -1 /* HOISTED */));\nconst _hoisted_35 = /*#__PURE__*/_createStaticVNode(\"<option value=\\\"2004\\\" data-v-5e0263be>2004년생</option><option value=\\\"2003\\\" data-v-5e0263be>2003년생</option><option value=\\\"2002\\\" data-v-5e0263be>2002년생</option><option value=\\\"2001\\\" data-v-5e0263be>2001년생</option><option value=\\\"2000\\\" data-v-5e0263be>2000년생</option><option value=\\\"1999\\\" data-v-5e0263be>1999년생</option><option value=\\\"1998\\\" data-v-5e0263be>1998년생</option><option value=\\\"1997\\\" data-v-5e0263be>1997년생</option><option value=\\\"1996\\\" data-v-5e0263be>1996년생</option><option value=\\\"1995\\\" data-v-5e0263be>1995년생</option>\", 10);\nconst _hoisted_45 = [_hoisted_35];\nconst _hoisted_46 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_47 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"college\"\n}, \"단과대학\", -1 /* HOISTED */));\nconst _hoisted_48 = /*#__PURE__*/_createStaticVNode(\"<option value=\\\"공과대학\\\" data-v-5e0263be>공과대학</option><option value=\\\"인문사회과학대학\\\" data-v-5e0263be>인문사회과학대학</option><option value=\\\"자연과학대학\\\" data-v-5e0263be>자연과학대학</option><option value=\\\"경영대학\\\" data-v-5e0263be>경영대학</option><option value=\\\"수산과학대학\\\" data-v-5e0263be>수산과학대학</option><option value=\\\"환경해양대학\\\" data-v-5e0263be>환경해양대학</option><option value=\\\"정보융합대학\\\" data-v-5e0263be>정보융합대학</option><option value=\\\"미래융합대학\\\" data-v-5e0263be>미래융합대학</option><option value=\\\"글로벌자율전공학부\\\" data-v-5e0263be>글로벌자율전공학부</option>\", 9);\nconst _hoisted_57 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_58 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"department\"\n}, \"소속학부\", -1 /* HOISTED */));\nconst _hoisted_59 = [\"value\"];\nconst _hoisted_60 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_61 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"학교 이메일\", -1 /* HOISTED */));\nconst _hoisted_62 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"input\", {\n  class: \"input\",\n  type: \"email\",\n  id: \"email\",\n  required: \"\",\n  pattern: \".+@pknu\\\\.ac\\\\.kr\",\n  title: \"부경대학교 이메일로 입력해주세요 (예: example@pknu.ac.kr)\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_63 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createCommentVNode(\" 회원가입 제목 추가 \"), _createElementVNode(\"form\", {\n    onSubmit: _cache[15] || (_cache[15] = (...args) => $options.onSubmit && $options.onSubmit(...args))\n  }, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    class: \"input\",\n    type: \"text\",\n    id: \"studentID\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.studentID = $event),\n    onInput: _cache[1] || (_cache[1] = (...args) => $options.validateStudentID && $options.validateStudentID(...args))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.studentID]]), _createElementVNode(\"button\", {\n    class: \"check-button\",\n    type: \"button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.checkDuplicate && _ctx.checkDuplicate(...args))\n  }, \"중복확인\"), _hoisted_4, _hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    class: \"input\",\n    type: \"password\",\n    id: \"password\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), _hoisted_6, _hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"passwordVerify\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.passwordVerify = $event),\n    required: \"\",\n    onInput: _cache[5] || (_cache[5] = (...args) => _ctx.validatePassword && _ctx.validatePassword(...args))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.passwordVerify]]), _hoisted_8, _hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    class: \"input\",\n    type: \"text\",\n    id: \"name\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.name = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.name]]), _hoisted_10, _createElementVNode(\"div\", _hoisted_11, [_createCommentVNode(\" 성별 그룹을 나타내는 div 추가 \"), _hoisted_12, _withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    id: \"male\",\n    name: \"gender\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.selectedGender = $event),\n    value: \"male\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.selectedGender]]), _hoisted_13, _withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    id: \"female\",\n    name: \"gender\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.selectedGender = $event),\n    value: \"female\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.selectedGender]])]), _hoisted_14, _hoisted_15, _withDirectives(_createElementVNode(\"select\", {\n    id: \"residence\",\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.selectedResidence = $event)\n  }, [_createCommentVNode(\" 부산광역시 구들을 옵션으로 추가 \"), _hoisted_16], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedResidence]]), _hoisted_33, _hoisted_34, _withDirectives(_createElementVNode(\"select\", {\n    id: \"age\",\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $data.selectedBirthYear = $event)\n  }, _hoisted_45, 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedBirthYear]]), _hoisted_46, _hoisted_47, _withDirectives(_createElementVNode(\"select\", {\n    id: \"college\",\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $data.selectedCollege = $event),\n    onChange: _cache[12] || (_cache[12] = (...args) => $options.updateDepartments && $options.updateDepartments(...args))\n  }, [_createCommentVNode(\" 단과대학 옵션들을 추가 \"), _hoisted_48], 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelSelect, $data.selectedCollege]]), _hoisted_57, _hoisted_58, _withDirectives(_createElementVNode(\"select\", {\n    id: \"department\",\n    \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $data.selectedDepartment = $event)\n  }, [_createCommentVNode(\" 초기에는 공과대학에 해당되는 소속학과만 보이도록 설정 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.departments, department => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: department,\n      value: department\n    }, _toDisplayString(department), 9 /* TEXT, PROPS */, _hoisted_59);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedDepartment]]), _hoisted_60, _hoisted_61, _hoisted_62, _hoisted_63, _createElementVNode(\"input\", {\n    onClick: _cache[14] || (_cache[14] = (...args) => $options.goToMainPage && $options.goToMainPage(...args)),\n    type: \"submit\",\n    value: \"회원가입\"\n  })], 32 /* HYDRATE_EVENTS */), _createElementVNode(\"a\", {\n    onClick: _cache[16] || (_cache[16] = (...args) => $options.goToLoginPage && $options.goToLoginPage(...args)),\n    class: \"go-back\"\n  }, \"로그인 페이지로 돌아가기\"), _createCommentVNode(\" 로그인 페이지로 돌아가는 링크 추가 \")]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","_hoisted_35","type","id","required","pattern","title","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","onSubmit","_cache","args","$options","_hoisted_3","$data","studentID","$event","onInput","validateStudentID","onClick","_ctx","checkDuplicate","_hoisted_4","_hoisted_5","password","_hoisted_6","_hoisted_7","passwordVerify","validatePassword","_hoisted_8","_hoisted_9","name","_hoisted_10","_hoisted_11","_hoisted_12","selectedGender","value","_hoisted_13","_hoisted_14","_hoisted_15","selectedResidence","_hoisted_16","_hoisted_33","_hoisted_34","selectedBirthYear","_hoisted_46","_hoisted_47","selectedCollege","onChange","updateDepartments","_hoisted_48","_hoisted_57","_hoisted_58","selectedDepartment","_Fragment","_renderList","departments","department","key","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","goToMainPage","goToLoginPage"],"sources":["C:\\Users\\김혜빈\\Desktop\\MATCHING-US(2)\\project\\src\\views\\SignUpPage.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1 class=\"container-title\">MATCHING US</h1> <!-- 회원가입 제목 추가 -->\n\n    <form @submit=\"onSubmit\">\n      <label for=\"studentID\">학번 (ID)</label>\n      <input class=\"input\" type=\"text\" id=\"studentID\" required v-model=\"studentID\" @input=\"validateStudentID\">\n      <button class=\"check-button\" type=\"button\" @click=\"checkDuplicate\">중복확인</button>\n      <br>\n\n      <label for=\"password\">비밀번호</label>\n      <input class=\"input\" type=\"password\" id=\"password\" required v-model=\"password\">\n      <br>\n\n      <label for=\"passwordVerify\">비밀번호 확인</label>\n      <input type=\"password\" id=\"passwordVerify\" v-model=\"passwordVerify\" required @input=\"validatePassword\">\n      <br>\n\n      <label for=\"name\">이름</label>\n      <input class=\"input\" type=\"text\" id=\"name\" v-model=\"name\" required>\n      <br>\n\n      <div class=\"gender-group\"> <!-- 성별 그룹을 나타내는 div 추가 -->\n        <label for=\"male\">남자</label>\n        <input type=\"radio\" id=\"male\" name=\"gender\" v-model=\"selectedGender\" value=\"male\">\n        <label for=\"female\">여자</label>\n        <input type=\"radio\" id=\"female\" name=\"gender\" v-model=\"selectedGender\" value=\"female\">\n      </div>\n      <br> \n\n      <label for=\"residence\">부산광역시 거주지 (학기중 거주지)</label>\n      <select id=\"residence\" v-model=\"selectedResidence\">\n        <!-- 부산광역시 구들을 옵션으로 추가 -->\n        <option value=\"중구\">중구</option>\n        <option value=\"서구\">서구</option>\n        <option value=\"동구\">동구</option>\n        <option value=\"영도구\">영도구</option>\n        <option value=\"부산진구\">부산진구</option>\n        <option value=\"동래구\">동래구</option>\n        <option value=\"남구\">남구</option>\n        <option value=\"북구\">북구</option>\n        <option value=\"해운대구\">해운대구</option>\n        <option value=\"사하구\">사하구</option>\n        <option value=\"금정구\">금정구</option>\n        <option value=\"강서구\">강서구</option>\n        <option value=\"연제구\">연제구</option>\n        <option value=\"수영구\">수영구</option>\n        <option value=\"사상구\">사상구</option>\n        <option value=\"기장군\">기장군</option>\n        <option value=\"그외\">그외</option>\n      </select>\n      <br>\n\n      <label for=\"age\">출생연도</label>\n      <select id=\"age\" v-model=\"selectedBirthYear\">\n        <option value=\"2004\">2004년생</option>\n        <option value=\"2003\">2003년생</option>\n        <option value=\"2002\">2002년생</option>\n        <option value=\"2001\">2001년생</option>\n        <option value=\"2000\">2000년생</option>\n        <option value=\"1999\">1999년생</option>\n        <option value=\"1998\">1998년생</option>\n        <option value=\"1997\">1997년생</option>\n        <option value=\"1996\">1996년생</option>\n        <option value=\"1995\">1995년생</option>\n      </select>\n      <br>\n\n      <label for=\"college\">단과대학</label>\n      <select id=\"college\" v-model=\"selectedCollege\" @change=\"updateDepartments\">\n        <!-- 단과대학 옵션들을 추가 -->\n        <option value=\"공과대학\">공과대학</option>\n        <option value=\"인문사회과학대학\">인문사회과학대학</option>\n        <option value=\"자연과학대학\">자연과학대학</option>\n        <option value=\"경영대학\">경영대학</option>\n        <option value=\"수산과학대학\">수산과학대학</option>\n        <option value=\"환경해양대학\">환경해양대학</option>\n        <option value=\"정보융합대학\">정보융합대학</option>\n        <option value=\"미래융합대학\">미래융합대학</option>\n        <option value=\"글로벌자율전공학부\">글로벌자율전공학부</option>\n      </select>\n      <br>\n\n      <label for=\"department\">소속학부</label>\n      <select id=\"department\" v-model=\"selectedDepartment\">\n        <!-- 초기에는 공과대학에 해당되는 소속학과만 보이도록 설정 -->\n        <option v-for=\"department in departments\" :key=\"department\" :value=\"department\">{{ department }}</option>\n      </select>\n      <br>\n\n      <label for=\"email\">학교 이메일</label>\n      <input class=\"input\" type=\"email\" id=\"email\" required pattern=\".+@pknu\\.ac\\.kr\" title=\"부경대학교 이메일로 입력해주세요 (예: example@pknu.ac.kr)\">\n      <br>\n\n      <input @click=\"goToMainPage\" type=\"submit\" value=\"회원가입\" >\n    </form>\n\n    <a @click=\"goToLoginPage\" class=\"go-back\">로그인 페이지로 돌아가기</a> <!-- 로그인 페이지로 돌아가는 링크 추가 -->\n  </div>\n</template>\n\n\n<script>\nexport default {\n  data() {\n    return {\n      studentID: \"\",\n      password: \"\",\n      passwordVerify: \"\",\n      name: \"\",\n      selectedGender: \"\", // 선택된 성별 초기값은 빈 문자열로 설정\n      selectedResidence: \"\", // 선택된 거주지 초기값은 빈 문자열로 설정\n      selectedBirthYear: \"\", // 선택된 출생연도 초기값은 빈 문자열로 설정\n      selectedCollege: \"공과대학\", // 초기에는 \"공과대학\"이 선택되도록 설정\n      selectedDepartment: \"\", // 선택된 소속학부 초기값은 빈 문자열로 설정\n      departments: [\n        // 초기에는 \"공과대학\"에 해당하는 소속학부들만 보이도록 설정\n        \"전기공학부\",\n        \"전기공학전공\",\n        \"제어계측공학전공\",\n        \"디스플레이반도체공학전공\",\n        \"기계공학부\",\n        \"기계공학전공\",\n        \"기계설계공학전공\",\n        \"에너지수송시스템공학부\",\n        \"냉동공조공학전공\",\n        \"기계시스템공학전공\",\n        \"조선해양시스템공학전공\",\n        \"화학공학과\",\n        \"공업화학고분자공학부\",\n        \"공업화학전공\",\n        \"고분자공학전공\",\n        \"나노융합공학과\",\n        \"시스템경영안전공학부\",\n        \"산업경영공학전공\",\n        \"기술데이터공학전공\",\n        \"안전공학전공\",\n        \"소방공학과\",\n        \"융합소재공학부\",\n        \"금속공학전공\",\n        \"재료공학전공\",\n        \"신소재시스템공학전공\",\n        \"건축공학과\",\n        \"지속가능공학부\",\n        \"토목공학전공\",\n        \"생태공학전공\",\n      ],\n    };\n  },\n  methods: {\n    goToMainPage() {\n      this.$router.push(\"/MainPage\");\n    },\n    goToLoginPage() {\n      this.$router.push(\"/\");\n    },\n    validateForm() {\n      // 회원가입 양식의 유효성을 검사하는 로직을 구현\n      // 필요한 검증을 진행하고 유효하지 않은 경우 사용자에게 안내\n    },\n\n    validateStudentID() {\n      const onlyNumbers = this.studentID.replace(/\\D/g, \"\"); // 문자열 입력시 입력차단\n\n      // 10자리 넘게 입력 방지\n      if (onlyNumbers.length > 9) {\n        alert(\"학번은 9자리여야 합니다.\");\n        this.studentID = onlyNumbers.slice(0, 9);\n        return;\n      }\n\n      // Ensure the student ID starts with the number 2\n      if (!onlyNumbers.startsWith(\"2\")) {\n        // Display an error message for an invalid student ID prefix\n        alert(\"가입 가능한 학번이 아닙니다.\");\n        this.studentID = \"\"; // 입력된 값 초기화\n        return; // Stop further processing\n      }\n\n      // Update the studentID data to only contain numeric characters\n      this.studentID = onlyNumbers;\n    },\n\n    onSubmit(event) {\n      event.preventDefault(); // 폼의 기본 동작(새로고침)을 막습니다.\n\n      // 비밀번호와 비밀번호 확인란의 값을 가져옵니다.\n      const password = this.password;\n      const passwordVerify = this.passwordVerify;\n\n      // 두 값이 다른 경우, alert를 띄웁니다.\n      if (password !== passwordVerify) {\n        alert(\"비밀번호가 일치하지 않습니다. 다시 입력해주세요.\");\n      } else {\n        // 두 값이 같은 경우, 회원가입 양식의 유효성 검사 메소드를 호출합니다.\n        this.validateForm();\n      }\n    },\n\n\n    updateDepartments() {\n      // 선택된 단과대학에 따라 소속학부 옵션을 동적으로 업데이트하는 코드 추가\n      this.departments = []; // 일단 빈 배열로 초기화 (실제로는 서버로부터 받아온 값으로 설정)\n\n      if (this.selectedCollege === \"공과대학\") {\n        this.departments.push(\n          \"전기공학부\",\n          \"전기공학전공\",\n          \"제어계측공학전공\",\n          \"디스플레이반도체공학전공\",\n          \"기계공학부\",\n          \"기계공학전공\",\n          \"기계설계공학전공\",\n          \"에너지수송시스템공학부\",\n          \"냉동공조공학전공\",\n          \"기계시스템공학전공\",\n          \"조선해양시스템공학전공\",\n          \"화학공학과\",\n          \"공업화학고분자공학부\",\n          \"공업화학전공\",\n          \"고분자공학전공\",\n          \"나노융합공학과\",\n          \"시스템경영안전공학부\",\n          \"산업경영공학전공\",\n          \"기술데이터공학전공\",\n          \"안전공학전공\",\n          \"소방공학과\",\n          \"융합소재공학부\",\n          \"금속공학전공\",\n          \"재료공학전공\",\n          \"신소재시스템공학전공\",\n          \"건축공학과\",\n          \"지속가능공학부\",\n          \"토목공학전공\",\n          \"생태공학전공\",\n        );\n      } else if (this.selectedCollege === \"인문사회과학대학\") {\n        this.departments.push(\n          \"국어국문학과\",\n          \"영어영문학부\",\n          \"일어일문학부\",\n          \"사학과\",\n          \"경제학과\",\n          \"법학과\",\n          \"행정복지학부\",\n          \"국제지역학부\",\n          \"중국학과\",\n          \"정치외교학과\",\n          \"유아교육과\",\n          \"패션디자인학과\",\n          \"사회계열\",\n        );\n      } else if (this.selectedCollege === \"자연과학대학\") {\n        this.departments.push(\n          \"응용수학과\",\n          \"물리학과\",\n          \"화학과\",\n          \"미생물학과\",\n          \"간호학과\",\n          \"과학컴퓨팅학과\",\n        );\n      } else if (this.selectedCollege === \"경영대학\") {\n        this.departments.push(\n          \"경영학부\",\n          \"국제통상학부\"\n        );\n      } else if (this.selectedCollege === \"수산과학대학\") {\n        this.departments.push(\n          \"식품과학부\",\n          \"식품공학전공\",\n          \"식품영양학전공\",\n          \"생물공학과\",\n          \"해양생산시스템관리학부\",\n          \"수산생명과학부\",\n          \"양식응용생명과학전공\",\n          \"자원생물학전공\",\n          \"수산생명의학과\",\n          \"수해양산업교육과\",\n          \"해양수산경영경제학부\",\n          \"해양수산경영학전공\",\n          \"자원환경경제학전공\",\n        );\n      } else if (this.selectedCollege === \"환경해양대학\") {\n        this.departments.push(\n          \"지구환경시스템과학부\",\n          \"환경공학전공\",\n          \"해양학전공\",\n          \"환경지질과학전공\",\n          \"환경대기과학전공\",\n          \"공간정보시스템공학전공\",\n          \"해양공학과\",\n          \"에너지자원공학과\",\n        );\n      } else if (this.selectedCollege === \"정보융합대학\") {\n        this.departments.push(\n          \"데이터정보과학부\",\n          \"빅데이터융합전공\",\n          \"통계데이터사이언스전공\",\n          \"미디어커뮤니케이션학부\",\n          \"언론정보전공\",\n          \"휴먼ICT융합전공\",\n          \"스마트헬스케어학부\",\n          \"의공학전공\",\n          \"해양스포츠전공\",\n          \"휴먼바이오융합전공\",\n          \"전자정보통신공학부\",\n          \"전자공학전공\",\n          \"정보통신공학전공\",\n          \"조형학부\",\n          \"건축학전공\",\n          \"공업디자인전공\",\n          \"시각디자인전공\",\n        );\n      } else if (this.selectedCollege === \"미래융합대학\") {\n        this.departments.push(\n          \"융합인재개발학부\",\n          \"평생교육상담학전공\",\n          \"경찰범죄심리학전공\",\n          \"융합공학부\",\n          \"기계조선에너지시스템공학전공\",\n          \"전기전자소프트웨어공학전공\",\n        );\n      } else if (this.selectedCollege === \"글로벌자율전공학부\") {\n        this.departments.push(\n          \"글로벌자율전공학부\"\n        );\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* 페이지 1: 로그인 창 */\n\n* {\n    margin: 5px;\n    padding: 0;\n    /* box-sizing: border-box; */\n}\n\nbody {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n/* 전체 컨테이너 스타일 */\n.container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  width: 100%; /* 컨테이너의 가로 폭을 100%로 설정 */\n}\n\n/* 제목 스타일 */\n.container-title {\n  font-weight: bold;\n  color: #333;\n  font-size: 32px; /* 글꼴 크기를 필요에 맞게 조정 */\n  margin-bottom: 20px;\n}\n\n/* 폼 래퍼 스타일 */\n.form-wrapper {\n  width: 80%; /* 폼 래퍼의 가로 폭을 80%로 설정 */\n}\n\n/* 폼 스타일 */\n.form-wrapper form {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n\nlabel {\n    margin-bottom: 8px;\n    font-weight: bold;\n}\n\n#check {\n    background-color: #007BFF;\n    color: white;\n    padding: 8px 12px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.2s;\n}\n\n#check:hover {\n    background-color: #0056b3;\n}\n\ninput[type=\"text\"],\ninput[type=\"password\"],\ninput[type=\"email\"],\nselect {\n    margin-bottom: 15px;\n    padding: 12px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    outline: none;\n    font-size: 16px;\n}\n\ninput[type=\"radio\"] {\n    margin-right: 5px;\n}\n\ninput[type=\"submit\"] {\n    background-color: #007BFF;\n    color: white;\n    padding: 10px 15px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-weight: bold;\n}\n\ninput[type=\"submit\"]:hover {\n    background-color: #0056b3;\n}\n\n.go-back {\n  display: block;\n  text-align: center;\n  margin-top: 20px;\n  text-decoration: none;\n  color: gray;\n  font-weight: bold;\n  margin-top: 30px; /* 폼과 \"돌아가기\" 링크 사이에 간격 추가 */\n}\n\n\n.go-back:hover {\n  text-decoration: underline;\n  color: #333;\n}\n\n\n.check-button {\n  background-color: #007BFF;\n  color: white;\n  padding: 10px 15px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.check-button:hover {\n  background-color: #0056b3;\n}\n\n.action-group {\n  display: flex;\n  justify-content: space-between;\n}\n\n@import \"~bootstrap/dist/css/bootstrap.min.css\";\n@import \"~@fortawesome/fontawesome-free/css/all.min.css\";\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAW;gEACpBC,mBAAA,CAA4C;EAAxCD,KAAK,EAAC;AAAiB,GAAC,aAAW;gEAGrCC,mBAAA,CAAsC;EAA/BC,GAAG,EAAC;AAAW,GAAC,SAAO;gEAG9BD,mBAAA,CAAI;gEAEJA,mBAAA,CAAkC;EAA3BC,GAAG,EAAC;AAAU,GAAC,MAAI;gEAE1BD,mBAAA,CAAI;gEAEJA,mBAAA,CAA2C;EAApCC,GAAG,EAAC;AAAgB,GAAC,SAAO;gEAEnCD,mBAAA,CAAI;gEAEJA,mBAAA,CAA4B;EAArBC,GAAG,EAAC;AAAM,GAAC,IAAE;iEAEpBD,mBAAA,CAAI;;EAECD,KAAK,EAAC;AAAc;iEACvBC,mBAAA,CAA4B;EAArBC,GAAG,EAAC;AAAM,GAAC,IAAE;iEAEpBD,mBAAA,CAA8B;EAAvBC,GAAG,EAAC;AAAQ,GAAC,IAAE;iEAGxBD,mBAAA,CAAI;iEAEJA,mBAAA,CAAkD;EAA3CC,GAAG,EAAC;AAAW,GAAC,qBAAmB;;iEAqB1CD,mBAAA,CAAI;iEAEJA,mBAAA,CAA6B;EAAtBC,GAAG,EAAC;AAAK,GAAC,MAAI;;qBAEnBC,WAAoC,C;iEAWtCF,mBAAA,CAAI;iEAEJA,mBAAA,CAAiC;EAA1BC,GAAG,EAAC;AAAS,GAAC,MAAI;;iEAazBD,mBAAA,CAAI;iEAEJA,mBAAA,CAAoC;EAA7BC,GAAG,EAAC;AAAY,GAAC,MAAI;;iEAK5BD,mBAAA,CAAI;iEAEJA,mBAAA,CAAiC;EAA1BC,GAAG,EAAC;AAAO,GAAC,QAAM;iEACzBD,mBAAA,CAAkI;EAA3HD,KAAK,EAAC,OAAO;EAACI,IAAI,EAAC,OAAO;EAACC,EAAE,EAAC,OAAO;EAACC,QAAQ,EAAR,EAAQ;EAACC,OAAO,EAAC,mBAAiB;EAACC,KAAK,EAAC;;iEACtFP,mBAAA,CAAI;;;uBA3FRQ,mBAAA,CAiGM,OAjGNC,UAiGM,GAhGJC,UAA4C,EAACC,mBAAA,gBAAmB,EAEhEX,mBAAA,CA2FO;IA3FAY,QAAM,EAAAC,MAAA,SAAAA,MAAA,WAAAC,IAAA,KAAEC,QAAA,CAAAH,QAAA,IAAAG,QAAA,CAAAH,QAAA,IAAAE,IAAA,CAAQ;MACrBE,UAAsC,E,gBACtChB,mBAAA,CAAwG;IAAjGD,KAAK,EAAC,OAAO;IAACI,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,WAAW;IAACC,QAAQ,EAAR,EAAQ;+DAAUY,KAAA,CAAAC,SAAS,GAAAC,MAAA;IAAGC,OAAK,EAAAP,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAM,iBAAA,IAAAN,QAAA,CAAAM,iBAAA,IAAAP,IAAA,CAAiB;iEAApCG,KAAA,CAAAC,SAAS,E,GAC3ElB,mBAAA,CAAgF;IAAxED,KAAK,EAAC,cAAc;IAACI,IAAI,EAAC,QAAQ;IAAEmB,OAAK,EAAAT,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAES,IAAA,CAAAC,cAAA,IAAAD,IAAA,CAAAC,cAAA,IAAAV,IAAA,CAAc;KAAE,MAAI,GACvEW,UAAI,EAEJC,UAAkC,E,gBAClC1B,mBAAA,CAA+E;IAAxED,KAAK,EAAC,OAAO;IAACI,IAAI,EAAC,UAAU;IAACC,EAAE,EAAC,UAAU;IAACC,QAAQ,EAAR,EAAQ;+DAAUY,KAAA,CAAAU,QAAQ,GAAAR,MAAA;iDAARF,KAAA,CAAAU,QAAQ,E,GAC7EC,UAAI,EAEJC,UAA2C,E,gBAC3C7B,mBAAA,CAAuG;IAAhGG,IAAI,EAAC,UAAU;IAACC,EAAE,EAAC,gBAAgB;+DAAUa,KAAA,CAAAa,cAAc,GAAAX,MAAA;IAAEd,QAAQ,EAAR,EAAQ;IAAEe,OAAK,EAAAP,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAES,IAAA,CAAAQ,gBAAA,IAAAR,IAAA,CAAAQ,gBAAA,IAAAjB,IAAA,CAAgB;iEAAjDG,KAAA,CAAAa,cAAc,E,GAClEE,UAAI,EAEJC,UAA4B,E,gBAC5BjC,mBAAA,CAAmE;IAA5DD,KAAK,EAAC,OAAO;IAACI,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,MAAM;+DAAUa,KAAA,CAAAiB,IAAI,GAAAf,MAAA;IAAEd,QAAQ,EAAR;iDAANY,KAAA,CAAAiB,IAAI,E,GACxDC,WAAI,EAEJnC,mBAAA,CAKM,OALNoC,WAKM,GALqBzB,mBAAA,wBAA2B,EACpD0B,WAA4B,E,gBAC5BrC,mBAAA,CAAkF;IAA3EG,IAAI,EAAC,OAAO;IAACC,EAAE,EAAC,MAAM;IAAC8B,IAAI,EAAC,QAAQ;+DAAUjB,KAAA,CAAAqB,cAAc,GAAAnB,MAAA;IAAEoB,KAAK,EAAC;kDAAtBtB,KAAA,CAAAqB,cAAc,E,GACnEE,WAA8B,E,gBAC9BxC,mBAAA,CAAsF;IAA/EG,IAAI,EAAC,OAAO;IAACC,EAAE,EAAC,QAAQ;IAAC8B,IAAI,EAAC,QAAQ;+DAAUjB,KAAA,CAAAqB,cAAc,GAAAnB,MAAA;IAAEoB,KAAK,EAAC;kDAAtBtB,KAAA,CAAAqB,cAAc,E,KAEvEG,WAAI,EAEJC,WAAkD,E,gBAClD1C,mBAAA,CAmBS;IAnBDI,EAAE,EAAC,WAAW;+DAAUa,KAAA,CAAA0B,iBAAiB,GAAAxB,MAAA;MAC/CR,mBAAA,uBAA0B,EAC1BiC,WAA8B,C,0CAFA3B,KAAA,CAAA0B,iBAAiB,E,GAoBjDE,WAAI,EAEJC,WAA6B,E,gBAC7B9C,mBAAA,CAWS;IAXDI,EAAE,EAAC,KAAK;iEAAUa,KAAA,CAAA8B,iBAAiB,GAAA5B,MAAA;0DAAjBF,KAAA,CAAA8B,iBAAiB,E,GAY3CC,WAAI,EAEJC,WAAiC,E,gBACjCjD,mBAAA,CAWS;IAXDI,EAAE,EAAC,SAAS;iEAAUa,KAAA,CAAAiC,eAAe,GAAA/B,MAAA;IAAGgC,QAAM,EAAAtC,MAAA,SAAAA,MAAA,WAAAC,IAAA,KAAEC,QAAA,CAAAqC,iBAAA,IAAArC,QAAA,CAAAqC,iBAAA,IAAAtC,IAAA,CAAiB;MACvEH,mBAAA,kBAAqB,EACrB0C,WAAkC,C,0DAFNpC,KAAA,CAAAiC,eAAe,E,GAY7CI,WAAI,EAEJC,WAAoC,E,gBACpCvD,mBAAA,CAGS;IAHDI,EAAE,EAAC,YAAY;iEAAUa,KAAA,CAAAuC,kBAAkB,GAAArC,MAAA;MACjDR,mBAAA,mCAAsC,G,kBACtCH,mBAAA,CAAyGiD,SAAA,QAAAC,WAAA,CAA5EzC,KAAA,CAAA0C,WAAW,EAAzBC,UAAU;yBAAzBpD,mBAAA,CAAyG;MAA9DqD,GAAG,EAAED,UAAU;MAAGrB,KAAK,EAAEqB;wBAAeA,UAAU,wBAAAE,WAAA;2EAF9D7C,KAAA,CAAAuC,kBAAkB,E,GAInDO,WAAI,EAEJC,WAAiC,EACjCC,WAAkI,EAClIC,WAAI,EAEJlE,mBAAA,CAAyD;IAAjDsB,OAAK,EAAAT,MAAA,SAAAA,MAAA,WAAAC,IAAA,KAAEC,QAAA,CAAAoD,YAAA,IAAApD,QAAA,CAAAoD,YAAA,IAAArD,IAAA,CAAY;IAAEX,IAAI,EAAC,QAAQ;IAACoC,KAAK,EAAC;iCAGnDvC,mBAAA,CAA2D;IAAvDsB,OAAK,EAAAT,MAAA,SAAAA,MAAA,WAAAC,IAAA,KAAEC,QAAA,CAAAqD,aAAA,IAAArD,QAAA,CAAAqD,aAAA,IAAAtD,IAAA,CAAa;IAAEf,KAAK,EAAC;KAAU,eAAa,GAAKY,mBAAA,yBAA4B,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}